%!PS-Adobe-2.0
%%Creator: dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)
%%Title: slides.dvi
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -o handout.ps slides.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 1999.10.05:0852
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 2 string 0 1 255{IE S dup 360 add 36 4 index cvrs cvn
put}for pop 65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley
X /rulex X V}B /V{}B /RV statusdict begin /product where{pop false[
(Display)(NeXT)(LaserWriter 16/600)]{dup length product length le{dup
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1200 600 600 (slides.dvi)
@start
%DVIPSBitmapFont: Fa cmsy10 12 6
/Fa 6 104 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<147014F8A81470007815
F0007C1401B4EC07F8D87F80EB0FF0D83FE0EB3FE0D80FF0EB7F80D803F8EBFE003900FE
73F890383F77E090380FFF80D903FEC7FCEB00F8EB03FE90380FFF8090383F77E09038FE
73F83903F870FED80FF0EB7F80D83FE0EB3FE0D87F80EB0FF0D8FF00EB07F8007CEC01F0
00781400C7140014F8A81470252B7AAD32>3 D<19E0F003F0180FF03FE0F0FF80943803
FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8EE3FE0EEFF80DB03FEC8FCED1FF8ED7FE0
913801FF80DA07FEC9FCEC1FF0EC7FC04948CAFCEB07FCEB1FF0EB7FC04848CBFCEA07FC
EA1FF0EA7FC048CCFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF90
38007FC0EC1FF0EC07FC913801FF809138007FE0ED1FF8ED07FE923800FF80EE3FE0EE0F
F8EE03FE933800FF80EF3FE0EF0FF8EF03FE943800FF80F03FE0F00FF01803F000E01900
B0007FB912E0BA12F0A26C18E03C4E78BE4D>20 D<1AF0A3861A78A21A7C1A3CA21A3E1A
1E1A1F747EA2747E747E87747E747E1B7E87757EF30FE0F303F8007FBC12FEBE1280A26C
F3FE00CEEA03F8F30FE0F31F8051C7FC1B7E63505A505A63505A505AA250C8FC1A1E1A3E
1A3CA21A7C1A78A21AF862A359347BB264>33 D<ED0FE015FF913803FC00EC0FE0EC3FC0
4A5A4AC7FC5C495AA2495AB3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE0A2EA
07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0EC03
FC913800FFE0150F236479CA32>102 D<12FEEAFFE0EA07F8EA00FEEB7F806D7E6D7E13
0F6D7EA26D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE0A2913803FC00EC
0FE0EC3FC04A5A4AC7FC5C495AA2495AB3AD495AA2495A131F495A495A01FEC8FCEA07F8
EAFFE048C9FC236479CA32>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr10 12 22
/Fb 22 122 df<163CA2167EA216FFA24B7FA24B7FA24B6C7EA292380E3FF0A24B6C7EA2
4B6C7EA24B6C7EA29238F003FF15E002016D7F15C002036D7F5D02076E7E92C7FC4A6E7E
140E021E6E7E141C023C6E7E143802786E7E147002F06E7E5C01016F7F5C01036F7F5C01
07707E91C9FC49707E130E011E707E131C013C707E13380178707E137001F0707E5B0001
7113805B00037113C05B0007F07FE090CBFC48F03FF0120E001EF01FF8001FBAFC4819FC
A24819FEA2BCFCA348477BC653>1 D<1406140E141C143814F014E01301EB03C0EB0780
EB0F005B131E133E5B137813F85B1201A2485AA2485AA2120F5BA2121FA290C7FCA25AA3
123E127EA65AB3A2127EA6123E123FA37EA27FA2120FA27F1207A26C7EA26C7EA212007F
1378137C7F131E131F7FEB0780EB03C0EB01E0130014F01438141C140E1406176476CA27
>40 D<12C07E12707E121E120E120F6C7E6C7E6C7E7F12007F137C133C133E131E131FA2
EB0F80A2EB07C0A214E01303A214F0A21301A214F8A3130014FCA6147EB3A214FCA614F8
1301A314F0A21303A214E0A2130714C0A2EB0F80A2EB1F00A2131E133E133C137C5B5B12
015B485A485A48C7FC120E121E12385A5A5A17647BCA27>I<16C04B7EB3AC007FBA1280
BB12C0A26C1980C8D801E0C9FCB3AC6F5A42427BB94D>43 D<ECFF80010713F090381FC1
FC90383F007E017C131F496D7E48486D7E00038148486D7EA248486D7EA2001F81A2003F
81A2491300A2007F81A600FF1680B3A3007F1600A5003F5D6D1301A3001F5DA2000F5D6D
130300075DA26C6C495A6C6C495AA2D8007C49C7FC013F137E90381FC1FC903807FFF001
00138029447CC132>48 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00C7FCB3A3
121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2B78AA1C>58
D<007FBA1280BB12C0A26C1980CEFCB0007FBA1280BB12C0A26C198042187BA44D>61
D<49B4EB0180010FEBE003013FEBFC079038FE00FED801F8EB1F8FD803E0EB07CF4848EB
03FF48487F48C8FC167F003E153F127E161F007C150F12FCA21607A37E16037EA27F6C6C
91C7FC7F7FEA3FFCEBFFC06C13FC6CEBFFC015FC6C14FF6C15C0C615F06D80011F800103
80D9007F7F02071480EC007F030713C015019238007FE0163F161F17F0160F12E01607A2
1603A37EA217E07E16077E17C06C150F6C16806DEC1F006D5C6D147ED8F9F85CD8F87E49
5A3AF01FE00FE06DB55AD8E00191C7FC39C0001FF82C487BC537>83
D<EAFFFEA4EAF000B3B3B3B3B3A2EAFFFEA40F6476CA1C>91 D<EAFFFEA4EA001EB3B3B3
B3B3A2EAFFFEA40F647ECA1C>93 D<EB07FC90383FFF809038FC07E03903E001F8390780
00FC48C7127E01C0137F486C6D7E6D6D7EA36F7EA26C5AEA0380C8FCA4EC07FF91B5FC90
3807FE0FEB3FE0EBFF00EA03FC485A485A485A485AA2485A177012FF90C7FCA2151FA36D
133F007F14776D01E313603B3FE001C3F0E03B0FF00381F9C03A07F80F01FF2701FFFC00
138026001FF0EB3E002C2E7CAC32>97 D<EC7FC0903803FFF890380FC07E90393F000F80
017EEB03C049EB01E0D803F81307ED0FF04848131F120F485AA2485AED0FE0007FEC0380
92C7FC5BA212FFAB127F7FA2123F16386C7E16786C6C147016F06C6C14E0000314016C6C
EB03C06C6CEB0780013FEB0F0090380FC07C903803FFF09038007F80252E7DAC2C>99
D<EE3F80ED3FFFA31500167F163FB3EC3FC0903801FFF890380FE03E90383F800F90397E
0003BF49EB01FF48487F12034848147F4848143F121FA2485AA2127FA25B12FFAB127FA2
7F123FA2121F7F000F157F7F000715FF6C6C5B6C6C497FD8007E903807BFE06D90391E3F
FF8090380FC07C903803FFF09026007F80EB800031467DC437>I<14FF010713E090381F
81F890387E00FC49137F4848EB3F800003141F484814C04848EB0FE0A2121F49EB07F012
3FA2007F15F85BA200FF1403A390B6FCA20180C8FCA6127FA37F123F1638121F6D147800
0F15706C6C14F016E06C6C13016C6CEB03C0D8007EEB07806DEB1F0090380FC07C903803
FFF09038007F80252E7DAC2C>I<EC0FE0EC7FF8903801F81E903803F03F90390FE07F80
90381FC0FF5C133F495AA2ED7F0001FE131C92C7FCAFB67EA3C648C8FCB3B2486C7E007F
13FFA321467DC51E>I<EA01F0487E487E487EA56C5A6C5A6C5AC8FCAD13FE127FA31203
12011200B3B0487EB512FCA316447DC31C>105 D<D801FCD97FC0EB07FC00FF902601FF
F890381FFF8091260780FE9038780FE0913C1E007F01E007F000030138903A3F838003F8
00014990391F87000100004902CE804A14CC01FDDA0FFC6D7E4A5C13FF91C75BA3495DB3
A8486C4A6C497EB5D8FE0FB500E0B512FEA34F2C7DAB54>109 D<D801FCEB7F8000FF90
3803FFF091380781FC91381E00FE00030138137F0001497F000049805C01FD6E7E5C13FF
91C7FCA35BB3A8486C4A7EB5D8FE1FB512C0A3322C7DAB37>I<EC7FC0903803FFF89038
0FC07E90393F001F80017E6D7E01F8EB03E000018148486D7E48486D7E000F8149147E00
1F157FA2003F168049143F007F16C0A400FF16E0AA007F16C0A36C6CEC7F80A2001F1600
A26C6C14FE00075D6D13016C6C495A00015DD8007EEB0FC06D495A90260FC07EC7FC9038
03FFF89038007FC02B2E7DAC32>I<3901FC01F800FFEB0FFEEC1E1F9138383F80000390
38707FC0000113E0000013C013FD1480ED3F8001FFEB0E0091C8FCA45BB3A67F487FB6FC
A3222C7EAB27>114 D<130EA6131EA4133EA2137EA213FE120112031207001FB512F8B6
FCA2C648C7FCB3A4150EAA017E131E017F131CA26D133C90381F8038ECC070903807E0E0
903801FFC09038007F001F3E7EBC27>116 D<B500F090B5FCA3000790C7EA3FF8D801FE
EC1FE0EE0FC0000016801700137F160E6E131E013F141CA26D6C5BA26E1378010F1470A2
6D6C5BA2ECF80101035CA26D6C485AA2ECFE07010091C7FCA2EC7F0EA2159EEC3F9CA2EC
1FF8A36E5AA26E5AA36E5AA25DA2140792C8FCA2140EA2141E003C131C127EB45BA25C14
F0485B387C01C038780780D83E0FC9FCEA0FFCEA03F0303F7EAA35>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi7 8.4 5
/Fc 5 122 df<EB01C0EB07E0130FA314C0EB038090C7FCA9EA01F0EA03FCEA0F1F121E
001C138012381278EA703F140012F0485A137EEA00FE5BA212015B12035BA20007137813
E01470120FEBC0F014E013C1EB81C0EB83803807C700EA03FEEA00F815307DAE1C>105
D<153815FC15FE140115FC140015701500A9147E903801FF80903803C7C090380703E001
0E13F0131C133C1378EB700713F001E013E0A2EB000FA215C0A2141FA21580A2143FA215
00A25CA2147EA214FEA25CA21301A25CA2130300385BEAFE075C495A48485A49C7FCEAF0
7CEA7FF0EA1FC01F3E80AE21>I<3907C001FC3A0FF007FF803A1CF81E07C03A387C7803
E0D97EF07F38787FE00070EBC001148000F0EB0003EAE0FEA25B0000140700015D5BA215
0F00035D5B151FEE83C00007143F49EC0380A2ED7F07000F027E1300495C160EED3E1C00
1F5D49EB0FF00007C7EA03C02A207D9E31>110 D<90391F801F8090397FE07FE03A01F0
F8F0F03A03C07DE0783A07807FC1F8390F003F83120E001E1403001C017F13F0003C9038
7E01E0003891C7FCA2C712FE5CA313015CA3010314F0A2001C4913E0007E1401010714C0
00FE1403010F1480ED070039781EF81E90383C783C393FF03FF03907C00FC025207D9E2D
>120 D<13F8D803FE14E0D8071FEB03F0380E0F80001C1407D8381F14E0A21270013F13
0F00F0010013C012E05BD8007E131F168013FE5B153F000115005BA25D0003147E5BA215
FE00015C1401EBF8030000130790387C1FF8EB3FFDEB07E1EB00035DA2390F8007E0121F
003F495A4A5A92C7FCEB003E003C5B381C01F8380F07E03807FF80D801FCC8FC242E7D9E
28>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi10 12 20
/Fd 20 122 df<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B788A1C>58
D<121FEA3F80EA7FC0EAFFE0A313F0A2127FEA3FB0EA1F301200A413701360A213E013C0
A2120113801203EA07001206120E5A5A12300C1E788A1C>I<027FB9128091BAFCA29126
007FF0C7120F6F4802001300037F82864C81A28615FF5EA34A170E93C9FCA35C4B1438A2
18780207037090C7FC5DA218F0020F5D4B130117031707021FEC1FC092B6FCA3913A3FF0
003F804B130FA21707027F92C9FC5DA25F02FF020E14E05D1901624992C7FC92C9120362
19074995C7FC4A5E190E191E13074A5E197C61130F4A15014E5A011F160F4E5A4A15FF01
7F030F5BBAFCA26149447DC34A>69 D<027FB812FE91B9FCA29126007FF0C7121F6F48EC
03FC037F150119004C157CA21A3C15FF5EA34A173893C9FCA35C5D183818780207037013
005DA218F0020F5D4B1301A21703021F4A5A4B133F92B6FCA24A5D9238E0003F170FA202
7F92C8FC4B7FA25F02FF140E5DA2171E49151C92CBFCA35B5CA313075CA3130F5CA2131F
A3EB7FFCB7FCA347447DC340>I<4CB46C130C041F01F0131C93B500FC133C0307D9003F
137CDB1FF890380F80F8DB7FC0EB03C14A48C7EA01E3DA03FCEC00F7DA0FF8ED7FF04A48
153FEC3FC04A48151F4948C913E04948160F495A495AF107C0495A495A495A01FF18805C
5A91CAFC481900485AA2485A96C7FC121F5BA2123F5BA3127F5BA4485A4CB612E05E1AC0
93C7EBF000725AA2127F61A218FF61A2123F6D5DA2001F95C7FC7F000F5E6C6C5E17076C
6C150F6C6C151F6C6CED3EFC6D6C147CD93FE0903801F07CD90FF8EB07E06DB490383F80
3801019039FFFE0018D9003F01F890C8FC0203138046487CC54E>I<007FB500F091383F
FFFEB6FC5DC601F8C8000313C002E0923801FE006D486F5A61614E5A6E5E4E5A133F4EC7
FC180EA260183C6E153860131F604D5AA24D5A17076E92C8FC170E130F5F5FA25F17F06E
5C4C5A010714035F4CC9FCA2160E161E6E131C5E0103147816705EA24B5AECFF035E4BCA
FC6D5B150E5DA25D15F85D5D7F5D5DA292CBFCA25C5C147C1478147047467BC33A>86
D<EC03FC91381FFF809138FE03C0903903F000F049481378D91FC01338494813F890397F
0003FC01FE1307485A4848EB0FF812075B000FEC07F04848EB03C092C7FC485AA3485AA3
12FF90C9FCA45AA51618163C1678007E15F8ED01F06CEC03E0ED07806C6CEB0F006C6C13
3E3907E001F83901F00FE026007FFFC7FCEB1FF0262D7CAB2B>99
D<EC07FCEC3FFF9138FE07C0903903F003E090390FC001F090381F8000017FC7FC01FE14
78485A000315F84914F0485A000F1401484814E015034848EB07C0ED1F80EDFE00007FEB
1FF890B512C002F8C7FC0180C8FC12FF90C9FCA55AA4007E1518163C1678007F15F86CEC
01F0ED03E06C6CEB0780000FEC0F006C6C133E3903E001F83901F00FE026007FFFC7FCEB
1FF0262D7CAB2E>101 D<EE07E0EE1FF8EE7E1EEEF80F03015B923903F07F8017FF1507
04E11300150FA2EEE0FE031F13784CC7FCA4153F5EA4157F93C8FCA449B612E0A25F90C7
48C8FCA314015DA414035DA414075DA4140FA25DA4141F5DA4143F5DA4147F92C9FCA414
FEA45C1301A25C121EEA3F83007F5B12FF5C1387EB07C05CEAFC0FD8701FCAFCEA3C3EEA
1FF8EA07E0315A7BC531>I<140EEC3F80147F14FFA4EC7F00143C91C7FCAE133FEBFFC0
3801C3E0380381F0EA0701000E7F121E121CEA3C031238A2EA70075CA2EAF00F00E05BEA
001F5CA2133F5CA2137F91C7FC5B5BA212015BEC03C00003148013F81207EBF0071500A2
EBE00EA25C143C143800035B3801F1E06CB45A013FC7FC1A447DC222>105
D<161C167F16FF5DA316FE150016781600AE15FCEC03FF91380F07C0021E13E0EC3C0302
7813F014F014E01301ECC007EB0380A2EB0700150F5B010E14E090C7FC151FA216C0A215
3FA21680A2157FA21600A25DA25DA21401A25DA21403A25DA21407A25DA2140FA25DA214
1F5DA2001E133FD87F805BA200FF49C7FC14FE5CEB01F848485A48485A38781F80D81FFE
C8FCEA07F0285781C229>I<EB01FE13FF5AA2380003FC13011303A25CA313075CA3130F
5CA3131F5CA3133F5C163EEEFF80017F903803C1C09139000F07E0ED1C0FED381F49EB70
3F4913E0EC01C0DA038013C00001EB0700D9FC0EEB0F004A90C7FC5C00035B495AEBF9C0
EBFB8048B4C9FC8014F8EBF3FE390FF07F809038E01FE06E7E1407001F80EBC003A2EE03
C0003F16801380A21607007F1600010013F05E160E5A485D14015E486D6C5AED3FE00070
EC0F802B467AC434>I<01F8D901FEEC3FC0D803FE90260FFFC0EBFFF83E070F803E07E0
03C07C000F903CC0F003F00F003F3C1E07C1E001F81C001C9028E38000FC386D7E02E7C7
5B003801EE5D02FCDAFFC080130F0078495D00704992C7FCA226F01FE04948143F00E062
4A5C1200013F0203157F98C7FC4A5CA2017F02075D6291C75B190149020F5DA2494B1303
620001031FEE078007071400494B14F0190F0003033F4B5A1B0E495D505A0007157F6349
92C714781B7007075B49027E913803E3C073B45AD803800238DA007EC7FC512D7DAB57>
109 D<01F8EB03FCD803FE90380FFF803B078F803C07C03B0F0FC0F003F0390E07C1C000
1C9039E38001F8ECE700003C13EE003801FC80130F00785B00705BA226F01FE0130300E0
5E5C1200013F14075F5CA2017F140F5F91C7FC161F495DA249143F5F00011778047F1370
4915005E00034B13F018E05B9338FC01C01207EF03804915071800EE7C0E49EC3E3CEE1F
F8D80380EC07E0352D7DAB3C>I<EC03FC91381FFF8091387E07E0903901F801F0903907
E000FCD91FC0137E495A49C77E13FE484815804848141F000716C05B120F485AA2485A16
3FA2485AA2167F00FF168090C8FCA216FF17005A4B5AA25E15035E4B5A007E4A5AA2007F
4A5A6C4A5A4BC7FC6C6C13FC6C6C485A3907E007E03901F01F8026007FFEC8FCEB1FF02A
2D7CAB30>I<D901F0EB0FC0D907FCEB7FF8D90F1FEBF07E011E903883C01F90273C0F87
80138001389038CE000F03DC14C0017001F8EB07E05D141F01F04914F001E05BA2000113
3F13C05DC7FC027F140FA292C7FCA24A141F18E05CA20101153F18C05C18800103157F18
004A5C5F010714015F4C5A5F496C495A4C5A6E495A02EE49C7FCD91FE7137E9138E3C1F8
9138C1FFE0DAC07FC8FC013F90C9FCA25CA2137FA291CAFCA25BA25BA21201A21203387F
FFFCB5FCA2343F84AB32>I<EC0FF8EC7FFF903901F80780903907C001E090390F8000F0
49C71270133EED03F8491307A201FCEB0FF0A3ED07C06D90C7FC7F14E014FF15E06D13F8
6D7F6D7F6D7F01031480EB003F14019138007FC0153F151F120FD83FC0EB0F80127FA215
1F48481400A290C7123E127C00705C00785C6C495A6CEB03C03907C01F802603FFFCC7FC
38007FE0252D7BAB2F>115 D<143814FEA21301A25CA21303A25CA21307A25CA2130FA2
5CA2007FB512FCB6FC15F839001FC000133FA25CA2137FA291C7FCA25BA25BA21201A25B
A21203A25BA21207A25BA2000F14F015E05B140115C0001F130301C013801407EC0F0000
0F130E5C143C000713703803E1E06CB45AD8007EC7FC1E3F7EBD24>I<027EEB07F8903A
03FF801FFE903B0F83E03C0F8090271E01F07013C0013C9038F8E01F903A7800F9C03F49
01FF137F48481480491400000317805B00074AEB1E0090C791C7FC1401485C120EC7FC14
035DA314075DA3140F5DA3021F141E171C5D173C000F013F1438EA3F80D87FC05D4A4813
F06F5B26FF80FF495A02E71303267F01C7495A287C0383E00EC7FC3A3E0F01F03C3A0FFE
007FF0D803F8EB1FC0322D7EAB39>120 D<133FD9FFC014F02601C3E0EB01F8260381F0
1303EA0701000E6D1307001E16F0121CEA3C030038150F17E0EA70075C161FD8F00F15C0
00E05BEA001F4A133F1780133F5C167F017F150091C7FCA25E495C5BA215015E485AA215
035EA200001407A24B5A017E131F153F6D137F90391F81EFE0903807FF8F903800FE0FEC
001F5EA2153FD807805CEA1FC0486C49C7FC157E15FE4848485A5D49485A393E0007E000
38495A003C495A6C013EC8FC380F81F83803FFE0C690C9FC2D407DAB31>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr8 9.6 5
/Fe 5 62 df<EB07FCEB1FFF90387E0FC09038F803E03903E000F84913780007147C4848
7FA248C77EA2481580A2003E140F007E15C0A500FE15E0B2007E15C0A4007F141F6C1580
A26C1500A26D5B000F143E6C6C5BA26C6C5B3901F803F039007E0FC0D91FFFC7FCEB07FC
23377DB42A>48 D<EB01C01303130F133FEA01FFB5FC13DFEAFE1F1200B3B3A5497E007F
B512F0A31C3579B42A>I<EB1FF0EB7FFE48B57E3907E03FE0390F800FF0391E0007F848
6D7E00386D7E127800706D7E12FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D1403
5D4A5A4A5A4A5A5D4AC7FC147E5CEB01F0495A495A495A90391F000380133E5B01781307
01E01400485A485A48C75A48B6FC5A5A485CB6FCA321357CB42A>I<EB07FC90383FFF80
9038F80FE03901E007F048486C7E48486C7ED80F007FEB8000D81FE07F7FA56C5A6C4848
5AC7FC5D14035D4A5A5DEC0F80023FC7FCEB1FFCECFF809038000FE0EC03F86E7E816E7E
ED7F80A216C0153F16E0A3123F487E487EA316C0157F5B6CC71380007CECFF00123C003E
495A390F8003FC3907F00FF00001B55A6C6C1380D90FFCC7FC23377DB42A>I<007FB812
FCB912FEA26C17FCCCFCAE007FB812FCB912FEA26C17FC37167B9E42>61
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmex10 12 3
/Ff 3 114 df<BD12FC88A3D87FF0CA0007806DEF000F6C6C1800001F081F13806C6C19
076D19016C9738007FC06C6D193F6E190F6C6DF107E06C1B036D6C19016E1AF0013F1A00
6D6C1A706D6C1A786E1A387F6D6D191C6F19007F6D7F6E7E81143F6E7E816E7E806E7F82
806E7F826F7E153F6F7E82150F6F7E6F7F83816F7F83167F163F161F5F705A5F4CCCFC5E
167E167C5E4B5A15034B5A4B5A5E4BCDFC153E157E5D5D4A5A4A5A14074A5A5D4ACD121C
023E1A3C4A1A3814FC49481A784A1AF0495A49481901010FF203E04948190791CD120F01
3EF21FC0491A7F01FC1AFF48480703138049190F4848197F48480607B5120048480503B6
FC48BDFC4863A25ABD5AA25E647B7F69>80 D<C27E8DA38D6C01C0CC12036EDF0001816C
6DF200076C6DE1007F7F6C1E0F6E1C016C6D766C7E6C6D1D1F6CF707FE6F1C036C6EF400
FF6D6D896D8B6FF51F806D6D1D0F6DF707C06F1D036D6DF501E06D6D1D007F701D706D80
6E6D1D386E1F00826E7F6E7F80826E7F80836E806F7F81836F7F6F7F81836F7F816F8084
707F8284707F707F8284707F70808285717F83717F85717F8385717F718083A27290CEFC
725A725A61725A61181F4E5A614ECFFC18FE4D5A4D5A17074D5A604D5A4D5A4DD0FC17FE
16014C5A5F4C5A4C5A4C5A4C5A167F4CD1FC5E4B5A4B5A4B5A150F4B5A4B5A4C1D384BD1
127015FE4A481EF002031FE04A481D014B1D034A481EC04A481D074A48F50F804AD1121F
4A1E3F4948F6FF004A6549481D074948535A49481D3F494852B45A013F1D0749481C3F91
CF0003B55A01FE1C7F484850B7FC48C15A5A48685AA248685AC2FC69858B7B7F90>88
D<1DC0F401E0A21C03A21DC01C07A21D801C0FA21D0064A21C1E1C3EA21C3C1C7CA21C78
1CF8A2641B01A264A21B03A2641B07A2641B0FA299C7FC63A21B1E1B3EA21B3C1B7CA21B
781BF8A2631A01A263A21A03A2631A07A2631A0FA298C8FC62A21A1E1A3EA21A3C1A7CA2
1A781AF8A2621901A262A21903A2621907A262190FA297C9FC61A2191E0104173E130E01
1E173C197C133E017F17784917F85A486D5E48170112064860486C7E003817031270486C
6C5E0040170712006D6C5E180FA296CAFC6D6C5DA2181E6D6C153EA2183C187C6D7E1878
18F86D7E601701A26D6D5CA217036E7E601707A26E6C5C170FA26E6C91CBFC5FA26E6C13
1E173EA2173C6E6C137CA217786E6C13F8A25F1601EC01FF5FA26E1383A25F1687ED7FC7
5F16CFED3FEF94CCFC16FFA26F5AA36F5AA36F5AA35E1503A25E15015E5BB3758364>
113 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi8 9.6 5
/Fg 5 122 df<14E0EB03F8A21307A314F0EB01C090C7FCAB13F8EA03FEEA070F000E13
80121C003C13C012381270EB1F8012F0EAE03F1400A2C65A137EA213FE5B12015BA21203
5B0007131CEBE03C1438120FEBC0781470A214E013813807C3C0EBC7803803FF00EA00FC
16377DB51D>105 D<150E153FED7F80A31600157E153C92C7FCAB141FEC7FE0903801E1
F0903803C0F8EB0780EB0F00011E7F131CEB3C0101385B13781370140313005DA21407A2
5DA2140FA25DA2141FA25DA2143FA292C7FCA25CA2147EA214FEA25CA2EA1C01007F5BEA
FF035C495A12FE495AD8F81FC8FCEA707EEA3FF8EA0FC0214680B522>I<D803C0EB7F80
3A0FF801FFE03A1C7C0781F83A3C3E1E00FC00380138137C007849137E38703FE05CEAF0
7F00E05B91C7FCA2017E14FEEA00FE495CA2150100015D5B15035E1203491307EEE03817
780007020F13704914C0A292381F80E0120F49EC81C0150FEE8380001F913807870049EB
03FE0007C812F82D247DA233>110 D<903907E003F090391FF80FFE9039783C1C0F9026
E01E7813803A01C01F703FD80380EBE07F0007130FD80F0013C0000E131F001E1600001C
EC801C93C7FC143FC790C8FCA35C147EA314FE5CA2160E0101141E001E151C003F5BD87F
81143C0183143800FF5D010714F03AFE0F7C01E0D87C0E495A27783C3E0FC7FC391FF80F
FE3907E003F029247EA230>120 D<13F8D803FE1438D80F1F14FC121E391C0F8001D838
1F14F8A212701503D8F03F14F000E01300A2491307D8007E14E013FE5B150F000115C05B
A2151F000315805BA2153F1600A25B6D5B15FE1401000113033800F80790387C1FFCEB3F
FCEB07F0EB00015DA2390F8003F0EA1FC0003F495AA24A5A49485A4948C7FC003C137E00
1C13F8380F03E03807FF80D801FEC8FC26337DA22A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi12 14.4 17
/Fh 17 127 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C768B21>58
D<120FEA3FC0EA7FE012FF13F0A213F8A3127F123FEA0F381200A513781370A313F013E0
A2120113C0120313801207EA0F00121EA25A5A12300D23768B21>I<020FBA1280A4DA00
0790C8121F6F4815031A000307EF7F00874C82A2150F875EA2031F170EA25EA2153FA24C
161EA2037F171CA24C14E0A203FF020191C7FC615EA24A15036193C71207A24A150F4EC9
FC4B5C4DB4FC4AB7FCA260A291390FFC0003EF00FC4B147C183C141F18385DA2023F1578
18705DA2027F15F0604B91CAFCA214FFA25DA25BA292CDFCA25BA25CA21307A25CA2130F
A2EB3FFE007FB612E0B7FC5EA251527AD14C>70 D<942603FF8014E0053F13F80403B500
FEEB01C0040F9138FF8003047F9039003FC007922601FFF0903807E00F4B0180903901F0
1F80DB0FFEC8EA783FDB3FF8153CDB7FE0ED1E7F912601FF80EEFF004A90C97E4A4882EC
1FF84A48705A4A5A4A481601495B4990CA5B5B4A1700495A494860133F5C495A01FF615C
5A485B634890CCFCA2485A98C7FCA2485AA2123F5BA3127F5BA312FF5BA44DB612FC5F5B
A294C7D83FFCC7FC735AA362A26C6C173F62A3003F187F7F62121F6D17FF120F6D606C6C
5E12036D5E6C6D4B90C8FC6C6D4B7ED97FF0151E6D6C157CD90FFE913801F83E6D6C6CEB
0FE0010101F89038FFC01E6D90B61200021F02F8130C020702C090C9FC9126007FFCCBFC
53567AD35C>I<020FB600E090B612FEA4DA00070180C8387FF8006F90C96C5A4C5F0307
177F645EA2030F17FF645EA2031F5E99C7FC5EA2033F5E635EA2037F1607635EA203FF16
0F635EA24A171F6393C9FCA24A173F6393B8FCA25C6303FCC9127FA2020F17FF635DA202
1F5E98C8FC5DA2023F5E625DA2027F1607625DA202FF160F625DA249171F6292C9FCA249
173F625CA20107177F625CA2010F17FFA2D93FFE03037F007FB60107B612F0B75BA24B5F
5F527AD161>I<020FB612FCA4DA000701C0C8FC6F90C9FC5E1507A25EA2150FA25EA215
1FA25EA2153FA25EA2157FA25EA215FFA25EA25CA293CAFCA25CA25DA21407A25DA2140F
A25DA2141FA25DA2023F17781A705D1AF0027F17E0A24B15011AC002FF1603A24B168019
075BF10F0092C95AA249173E197E4A167C19FC010716014E5A4A150F181F010FEE7FF0EF
03FF013F153F007FB95ABAFCA26145527AD150>76 D<943807FF8094B512F8040714FE93
3A1FF801FF80933A7FC0003FE0DB01FEC7EA0FF8DB07F86E7EDB1FF0EC01FEDB3FC06E7E
DBFF806F7E4A48C97F4A48707EDA0FF8161F4A48834A48707E4A5A4A48707E4990CAFC5B
4A8449481703495A011F85495AA2495A495AA248491980A25A91CBFC5A5B120F1C00485A
62A2485AA348484E5AA448484E5AA3505AA26349187FA2505AA2634F5BA24F90C7FCA24F
5A007F4E5A626D171F4F5A003FDA01F85DDB07FF4A5A6D011F6D495A001F91273E07C001
90C8FCDB78015C6C6C496C6C485A4A484A5AD807FC499038700FF000030103ED3FE0D801
FE494A5A01FF4CC9FC6C0183EC31FED97FC3EC3FF8D93FE35D90260FFBC0EB7FC0D907FF
4948CAFC01019038E01FFC6D6CB548140C020F1478020001F0151C92C7007C14181A38A2
621AF0057E13014F5A057F130772485AF0C07F95B55AA297C8FC61A2715B61715B7113C0
7190C9FCEF01FC516B7AD35D>81 D<B600F0010FB6020FB512E0A4000101F8C8001F0180
0200EBFC006C01E06F48C9EA3FE04A4C705A67060795C7FC017F1C1E1E1C1E3C1E3866A2
060F5FA2061F4C5A063F160366067716077393C8FC6E03E7160EA2013FDB01C35E170306
835EDD070316781D70050E5FA2051C4C5AA205384C5A05781607057094C9FC05E0160E6E
82DC01C05E84011FDA03805E0407177805001670040E17F0644C4C5AA24C4C5A16780470
4CCAFC4C5E1B0E4B486F5A14F84B486D5C130F4BC85C4B17F0030E5F4BEE81C0A24BEE83
80A24B0487CBFC03F0168F4B168EDAF9C0169C1ADCDAFF8016F8197F6D90C95BA24A5F5C
624A5FA24A94CCFCA24A167EA24A167C4A1678193873547AD16F>87
D<0207B600E091B6128062601E00DA000701FCC8001F13C0030101F06F48C7FC6F4916F0
4D5E706C168051C8FC706C151E63715D041F5E505A706C4A5A505A714AC9FC0407150E71
5C705D62706D5B4F5AF0C003704A5A4FCAFC94387FE01E61716C5A61F0F9E094381FFBC0
6171B4CBFC601707A28483A2855F4D7F171E4D7FEF787F17F04D6C7EEE01C0DC03807F93
3807001F040E80041E130F5E4C6D7E5E4B48804B487F4B5A4BC76C7F151E4B6E7F15384B
824B157F4A5A4A486F7E14074AC96C7E141E4A834A160FEB01F84948707ED90FF8160F01
3F8448B46C047F13C0B600C00207B612C0A25DA261527DD161>I<B600FC0303B512F8A3
5DC649CA383FFE00D93FF8EF1FF01BC0011F96C7FC6E173E010F183C626E5F01074D5A62
6E4C5A6D4DC8FC190E6D6D151E616F5D6D5F616F4A5A027F4B5A4EC9FC6E6C5C181E606E
6C5C18706F5C020F4A5A4D5A6F130702074ACAFC171E6E6C5B1738705A6E5C1681EEC3C0
6EEBC78004CFCBFC16FE6F5A5E6F5AA25EA25E157FA35E15FFA393CCFC5CA35D1403A35D
1407A35D140FA34A5A81147F90B612FE5A5EA255527CD144>I<F0FF804CB5FC4C1400A3
EE00036017011703A260A21707A260A2170FA260A2171FA260A2173FA260A2177FA26015
7F913907FFC0FF021F7F91267F81F890C7FC9138FE00784948133DD907F0131F49486D5A
131F49481307495A49C75BA2485A1203495D120749140F120F5F485A161F123F495DA216
3F127F495DA2167FA248485DA216FF1838170090C8FC5D6C17784C137015036D010714F0
003F5F150F92381FFC016C6C013D5C000F913879FE039026E001F05C2707F003E0130729
03F81F807F0FC7FCC6B538003FFED97FFCEB0FFCD90FE0EB03F039547CD23D>100
D<15F0EC03F8EC07FC140FA315F8A215F0EC03C091C7FCB1EB0FE0EB3FF8497EEBF07E38
01E07F48487ED807801380EA0F00000E137F121E121C123C003813FF15001278EA70015C
12F0130300005B13075CA2130F5CA2131F5C133F5CA2137F5CA201FF131C14005A49133C
15381203491378157015F04913E0140115C01403EC07800001EB0F003800FC3EEB7FFCEB
3FF0EB0FC01E507DCE28>105 D<177817FE160317FF5E17FEA217FCEE03F8EE00F01700
B1ED07F0ED1FFCED7FFE913901F83F80913803E01FDA07C013C0EC0F80030013E0141E5C
14381478147002F0133F5C010115C05C0103147FA290C81380A216FFA21700A25DA25EA2
1503A25EA21507A25EA2150FA25EA2151FA25EA2153FA25EA2157FA25EA215FFA293C7FC
A25CA25DA214035D000F1307D83FC05B007F495A12FF4A5A4A5A4A5A4948C8FCEB01FE38
7C07F8383FFFE06C1380D803FCC9FC306781CE30>I<EC1FF0EB3FFF5D5BA2EB007F5D14
3F147FA25DA314FF92C9FCA35B5CA313035CA313075CA3130F5C177E933803FF80011F02
0F13C04A90381F03E0EE7C019338F007F0013F903801E01F9139C003C03FED078092380F
007F017F131E4A4814E05D4BEB3FC09026FF81E0EB0F004A4890C7FC4A5A4AC9FC48131E
EBFE7CEBFFF05C487F14FF15C09038FC7FF00007EB0FFC9038F803FE6E7E6E7F000F147F
4980153FA2001FEE03805BA21707003F027F1400491480A25F007F160E49151E171C153F
00FF5E90C714786F6C5A92380FE1E0486EB45A03015B0078DA007EC7FC345479D23D>I<
DA3F80EB3F80DAFFE0EBFFE00103D9F80313F8903B0FC0FC07C0FC903B1F007E0F001E01
3CD93F1E137E4991389C01FF49ECBC0349EB1FF800014B5A485A4902E013FE120790C700
3FEB03FC489238C000F0000E1700A2001E147FA2C85BA215FF93C8FCA35C5DA314035DA3
14074B1470A3020F15F0000F17E0D83FC0491301007F17C0021F140300FF1780023F1407
EF0F00D9807B141E90260073F85B00FC01F1147C277801E0FC13F03B3E07C07E07E06CB4
486CB45A270FFE000F90C7FCD801F8EB03F838357CB343>120 D<EB0FE0D93FF815E049
6CEC03F8D9F07E14073801E07F48486C140FD807806D14F0EA0F00000E137F001E161F00
1C17E0123C003813FF92C7123F007817C0EA70015C00F0167F0103168000005B13074A14
FF1800130F5C5E011F5D5CA21603013F5D5CA21607017F5D5CA2160F5FA3161F5F163F01
3F147FA26E495A011F13036D6C5A903807F81F903A03FFFE7F80010013F8EC1FE091C712
FF94C7FCA25D5EA2D807E0495A487E001F4A5A123F4B5A4B5A5E49495A018049C8FC003C
C712FE4A5A6C495A6CEB0FF09038E03FC00003B5C9FCC613FCEB3FE0354C7DB339>I<17
101778177CA3177E173E173FEF1F8018C0007FB812E018F0B9FC7E18E0CAEA7F80EFFF00
EE01FC4C5A4C5A5F4C5A5FA20402C7FC34196BD53B>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmbx12 14.4 29
/Fi 29 124 df<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5AC8FCB3
EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A113576B425>58
D<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C7FA24C7FA34C8083047F80167E8304
FE804C7E03018116F8830303814C7E03078116E083030F814C7E031F81168083033F8293
C77E4B82157E8403FE824B800201835D840203834B800207835D844AB87EA24A83A3DA3F
80C88092C97E4A84A2027E8202FE844A82010185A24A820103854A82010785A24A82010F
855C011F717FEBFFFCB600F8020FB712E0A55B547BD366>65 D<BA7E19FCF1FF801AF01A
FCD8000701F0C7000F13FF060014C0071F7F070713F807017F737F747E747F747F86747F
747F8886888688A2757EA31D8087A21DC0A51DE0A387A963A31DC0A51D80A2631D00A351
5AA2646264505B6264505B505B5090C7FCF2FFFE4F5B07075B071F5B96B512C0060F91C8
FCBB5A1AF01AC007FCC9FC19805B527CD167>68 D<BC1280A5D8000701F8C7000114C0F0
001F19071901851A7F1A3F1A1FA2F20FE0A21A07A31A03A318F81BF01A01A497C7FC1701
A317031707170F177F92B6FCA59238F8007F170F170717031701A317001B3EA31B7CA395
C8FCA21BFCA21BF8A21A01A31A031BF01A071A0FA21A1F1A3FF27FE0F101FF1907191F06
03B5FCBCFCA21BC0A34F517CD058>I<932601FFFCEC01C0047FD9FFC013030307B600F8
1307033F03FE131F92B8EA803F0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0F
F94A01800203B5FC494848C9FC4901F8824949824949824949824949824990CA7E494883
A2484983485B1B7F485B481A3FA24849181FA3485B1B0FA25AA298C8FC5CA2B5FCAE6C05
7FB712E0A280A36C94C7003FEBC000A36C7FA36C7FA27E6C7FA26C7F6C7FA26D7E6D7F6D
7F6D6D5E6D7F6D01FC93B5FC6D13FF6D6C6D5C6E01F0EC07FB020F01FEEC1FF10203903A
FFF001FFE0020091B6EAC07F033FEE001F030703FC1307DB007F02E01301040149CAFC5B
5479D26A>71 D<B8D8C003B8FCA5D8000701F8C9001FEBE000B3AE92BAFCA503F8C9121F
B3B1B8D8C003B8FCA560527CD169>I<B812F8A5D8000701F8CAFCB3B3A91A7CA41AFC1A
F8A51901A31903A219071AF0190FA2191F193F197F19FF180360183F4DB5FCBB12E0A546
527CD151>76 D<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202EF
6DEF03CFA202E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778A2
6F6C17F0A26F6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F6D
5DA3706C5DA2706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131EA2
706D5BA2716C5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715BA2
715BA2725AA2725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180>I<93380FFF
C00303B6FC031F15E092B712FC0203D9FC0013FF020F01C0010F13C0023F90C7000313F0
DA7FFC02007F494848ED7FFE4901E0ED1FFF49496F7F49496F7F4990C96C7F4985494870
7F4948707FA24849717E48864A83481B804A83481BC0A2481BE04A83A2481BF0A3484971
13F8A5B51AFCAF6C1BF86E5FA46C1BF0A26E5F6C1BE0A36C6D4D13C0A26C6D4D1380A26C
1B006C6D4D5A6E5E6C626D6C4C5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B90C7FC
6D6D4B5A6D01FF02035B023F01E0011F13F0020F01FC90B512C0020390B7C8FC020016FC
031F15E0030392C9FCDB001F13E0565479D265>79 D<003FBC1280A59126C0003F9038C0
007F49C71607D87FF8060113C001E08449197F49193F90C8171FA2007E1A0FA3007C1A07
A500FC1BE0481A03A6C994C7FCB3B3AC91B912F0A553517BD05E>84
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033FEBFFC092B612F002F301017F
913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F4A824A6E7FA2727EA285A285
84A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A5B6F495BDACFC04990C7FCDA
87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F01FCC8FC90C7000313C04154
7BD24B>I<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001
FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A48
92C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC
3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC
020113E033387CB63C>I<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC00
7FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A248
815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6D
EC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8
010390B55A010015C0021F49C7FC020113F034387CB63D>101 D<EB3FF0B5FCA51203C6
FCB3A4EE1FFC93B512C0030314F0030F8092391FE07FFC92393F001FFE037C8003F07FDA
F1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B>
104 D<137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5
FCA512017EB3B3A6B612E0A51B547BD325>I<157FEDFF80020313E04A13F0A24A13F8A7
6E13F0A26E13E002001380ED7F0092C7FCADED1FF891B5FCA51401EC007FB3B3B1EA0780
EA1FE0487E487E486C13FF16F0A216E05C16C04A13806C4848130049485A003F495A000F
B512F06C5C0001148026001FFCC7FC256C87D329>I<EB3FF0B5FCA512017EB3B3B3B1B6
12F0A51C537BD225>108 D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F
6D7E030F6E017F8092271FE07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03
E080C602F06DD90780137FDAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FF
C75C4A5EA24A5EA44A5EB3ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0EB1F
FCB591B512C0030314F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1
E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<
913801FFE0021F13FE91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C
7E49486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880
A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B
6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC
020113E03A387CB643>I<903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F30101
7F913AF7F8007FFE0003D9FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717F
A285187F85A4721380AC1A0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F49
90C7FC03F0EBFFFC9126FBFE075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1
B612F8A5414D7BB54B>I<912601FFE0EB0780021F01F8130F91B500FE131F0103ECFF80
010F9039F03FC03F499039800FE07F903A7FFE0003F04948903801F8FF4849EB00FD4849
147F4A805A4849805A4A805AA291C87E5AA35B12FFAC6C7EA37EA2806C5EA26C6D5CA26C
6D5C6C6D5C6C93B5FC6C6D5B6D6C5B6DB4EB0FEF010F9038C07FCF6D90B5120F010114FE
D9003F13F80203138091C8FCB1040FB61280A5414D7CB547>I<90397FE003FEB590380F
FF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF
150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537>I<90
3903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE0130148487F4980127F
90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C816C
816C81C681013F1580010F15C01300020714E0EC003F030713F015010078EC007F00F815
3F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FFC00F
FC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<143EA6147EA414FEA2
1301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE07C0
AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B02031380
2A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED001FC61607B3AE5FA35FA201
7F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC0903A0FFFC03F836D90B5120301
0114FE6D6C13F8020701E091C7FC42377BB54B>I<B600F00107B5FCA5000101F8C8EA7F
E06C6DED3F00A2017F163E6E157E013F167C6E15FC6D5E6F13016D5E8117036D5E6F1307
6D5E6F130F6D5E6F131F6D93C7FC815F6E6C133E177E023F147C6F13FC6E5C16816E5C16
C3A26EEBE3E016E76E5C16FF6E5CA26E91C8FCA26F5AA36F5AA26F5AA26F5AA26F5A6F5A
40367DB447>I<BB12C0A4420480A243>123 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmsy10 14.4 7
/Fj 7 57 df<007FBA12FEBCFCA36C19FE4805769F5D>0 D<140E141FAA0030ED018000
F8ED03E000FE150F6C151F01C0147FD87FE0ECFFC0D83FF8010313803B0FFC0E07FE00D8
03FFEB1FF8C690388E3FE090393FCE7F8090260FFFFEC7FC010313F8010013E0EC3F80EC
FFE0010313F8010F13FE90393FCE7F809039FF8E3FE0000390380E1FF8D80FFCEB07FE3B
3FF81F03FF80D87FE0010013C0D8FFC0EC7FE00100141F48150F00F815030030ED0180C7
91C7FCAA140E2B3378B73C>3 D<EC3FE0903801FFFC010FEBFF804980017F14F090B67E
488148814881481680A24816C0A24816E0A24816F0A3B812F8AB6C16F0A36C16E0A26C16
C0A26C1680A26C16006C5D6C5D6C5D6D5C011F14C06D5C010101FCC7FC9038003FE02D2F
79B43C>15 D<1A0E1A3F1AFF1903F10FFEF13FF8F1FFE00603138095380FFE00F03FF8F0
FFE005031380DD0FFEC7FCEF3FF8EFFFE004031380DC0FFEC8FCEE7FF8923801FFE00307
1380DB1FFEC9FCED7FF8913801FFC0020790CAFCEC1FFCEC7FF0903801FFC0010790CBFC
EB1FFCEB7FF03801FFC0000790CCFCEA1FFCEA7FF0EAFFC090CDFC13C0EA7FF0EA1FFCEA
07FF000113C038007FF0EB1FFCEB07FF010113C09038007FF0EC1FFCEC07FF020113C091
38007FF0ED1FFE923807FF80030113E09238007FF8EE1FFE933803FF80040013E0EF3FF8
EF0FFE943803FF80050013E0F03FF8F00FFE953803FF80060013E0F13FF8F10FFEF103FF
19001A3F1A0E1A00B3007FBA12FEBCFCA36C19FE485F76CB5D>20
D<127012FCB4FC13C0EA7FF0EA1FFCEA07FF000113C038007FF0EB1FFCEB07FF010113C0
9038007FF0EC1FFCEC07FF020113C09138007FF0ED1FFE923807FF80030113E09238007F
F8EE1FFE933803FF80040013E0EF3FF8EF0FFE943803FF80050013E0F03FF8F00FFE9538
03FF80060013E0F13FF8F10FFEF103FF19001903F10FFEF13FF8F1FFE00603138095380F
FE00F03FF8F0FFE005031380DD0FFEC7FCEF3FF8EFFFE004031380DC0FFEC8FCEE7FF892
3801FFE003071380DB1FFEC9FCED7FF8913801FFC0020790CAFCEC1FFCEC7FF0903801FF
C0010790CBFCEB1FFCEB7FF03801FFC0000790CCFCEA1FFCEA7FF0EAFFC090CDFC12FC12
70CEFCB3007FBA12FEBCFCA36C19FE485F76CB5D>I<F103C04F7E190386190186190086
1A7EA286747E1A0F87747E747E747E747E1B7E007FBCFCBD7E1CE0886C87CEEA01FE757E
F43FC0F41FF0F407FC76B4FC0A0013E0F53FFC9A380FFF801D031D0F9A383FFC00F5FFE0
0A0390C7FCF407FCF41FF0F43FC00AFFC8FC515A007FBC12F8BD5A641C806C98C9FCCE12
7E63505A505A505A505A631A1F50CAFC1A7EA262621901621903621907735A694379BE78
>41 D<0070180700F8F00F80A26C181F007C1900A2007E60003E183EA2003F187E6C187C
6D17FC000F60A26D1601000760A26D1603000360A26D16070001606D160F000060A26D16
1F017C94C7FCA2017E5E6DB712FEA26D5EA3D90F80C85AA26E140101075E6E140301035E
A26E140701015EA26E140F01005EA26E141F027C92C8FC027E5C023E143EA2023F147E6E
147CA26F13FC020F5CEDC00102075CA2EDE00302035CA2EDF00702015CEDF80F02005CA2
EDFC1F037C90C9FCA2ED7E3FED3E3EA2ED3F7EED1F7C16FC6F5AA36F5AA36F5AA26F5A41
5680D242>56 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr7 8.4 11
/Fk 11 62 df<EB0FF0EB7FFEEBF81F3903E007C03907C003E0390F8001F0A248C712F8
A24814FCA2007E147EA500FE147FB0007E147EA46C14FCA26C14F8A2390F8001F0A23907
C003E03903E007C03901F81F8039007FFE00EB0FF0202F7CAD28>48
D<13075B133F13FFB5FCA2133F1200B3B1497E007FB512C0A31A2E78AD28>I<EB3FE038
01FFFC000713FFD80F801380391E003FC048EB1FE048EB0FF00070EB07F812FC6CEB03FC
7EA21401A2007E1303123CC7FC15F81407A215F0EC0FE0141F15C0EC3F80EC7F0014FC5C
495A495A495A49C7FC131E49131C5B5B48481338485A48C7FC000E1478001FB512F85A5A
B612F0A31E2E7BAD28>I<EB1FF0EBFFFE0003EBFF803907E01FE0390F000FF0001EEB07
F8003F1303018013FCA2EBC0011380121F380E0003C7FC15F8140715F0EC0FE015C0EC1F
80EC7E00EB3FF814FE9038001F80EC0FE0EC07F0EC03F8EC01FC15FEA2EC00FFA3127EB4
FCA3EC01FEA24814FC00781303007CEB07F86CEB0FF0390FE01FE06CB512800001EBFE00
38001FF0202F7CAD28>I<EC01C014031407A2140F141F143FA2147F14EFEB01CFA2EB03
8FEB070FA2130E131C1338A2137013E0A2EA01C0EA0380EA0700A2120E5A121812385A5A
B712C0A3C7380FC000A84A7E0107B51280A3222F7DAE28>I<001C1460391FC007E090B5
12C0158015005C14F814C0D81C1CC7FC90C8FCA8EB1FE0EB7FFC381DE03F391F800F8001
0013C0001EEB07E0001CEB03F0C7FC15F81401A215FCA3123C12FEA4EC03F85A007014F0
0078130715E06CEB0FC0001FEB1F80390FC07F003807FFFC000113F038003F801E2F7BAD
28>I<14FF010713C0011F13F090383F80F89038FC0078484813FC3803F001EA07E013C0
120F391F8000F8150048C8FCA25AA2127EEB07F838FE1FFE9038380F8090387007E09038
E003F039FFC001F890388000FCA290C712FE157E157F5AA3127EA3127FA26C147EA26C14
FE6D13FC390FC001F80007EB03F09038E007E03901F80FC06CB5128090383FFE00EB0FF0
202F7CAD28>I<1238123E003FB61280A34815005DA20078C7123C00705C5D5D4813014A
5A4A5AC748C7FC140E141E5C5CA25C13015C13035C1307A2495AA3131FA349C8FCA45BA9
131C21307BAE28>I<EB0FF0EB7FFE48B512803903F01FE03907C007F0390F8001F848C7
FC001E14FC003E147CA3123FA26D13FC01E013F8381FF0019038FC03F0390FFF07E06CEB
8F806CEBFE006C13F86C6C7EEB1FFF017F13C0D801F313E0D807C013F0390F807FF8391F
001FFC003EEB07FE007E1303007CEB00FF00FC147F48143FA2151FA37E007C143E127E00
3E147C003F14F8391FC001F03907F00FE06CB51280C6EBFE00EB1FF0202F7CAD28>I<EB
0FF0EB7FFC48B5FC3903F81FC03907E007E0390FC003F0381F8001D83F0013F848130015
FC127E00FE14FE157EA4157FA315FF127E127F6C5BA26C6C5A390FC0077F3807E00E3801
F01C38007FF890381FE07E90C7FC15FEA215FCA2EC01F8121FD83F8013F01403EC07E0EC
0FC09038001F80001EEB3F00381F80FE380FFFF8000313E038007F80202F7CAD28>I<00
7FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17C033147B9A3D>61
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr12 14.4 65
/Fl 65 123 df<1738177CA217FEA24C7EA24C7FA24C7FA2040E7FA293381E7FF0161C93
383C3FF816389338781FFC16709338F00FFE16E003016D7E16C003036D7F168003076D7F
16004B6D7F150E031E6E7E151C033C6E7E153803786E7E157003F06E7E5D02016F7E5D02
036F7F5D02076F7F92C8FC4A6F7F140E021E83021C167F023C830238163F027883027016
1F02F0834A160F0101844A820103854A8201078591CA7E4985010E83011E85011C187F01
3C850138183F0178850170181F01F08549180FA24848727EA24848721380A248CC6C13C0
A248BC12E0A2481BF0A2481BF8A2481BFCA2BD12FE57557BD462>1
D<ED03FF033F13E04AB512F8913907FE01FC91391FE0003E4A48130F02FFC76C7E494814
3F49484A7E494814FF130F5C495AA2715A49486EC7FC170C94C8FCAFEF3FC0B9FCA43A00
3FC00001EE007F173FB3B3A4D9FFF0ECFFF0007F9026FFE07FEBFFE0A43B547ED341>12
D<922603FF8049B47E033F01E0011F13F04AB500F890B512FC912807FE00FE03EB00FEDA
1FF090261F0FF0131FDA3FC090260F9FE0EB078002FFC72607FF806D7E4948021F90C712
1F49484A484A7E49484A48147F130F4A5D49485DA2755A4948DA1FE06E5A0906C7FC98C8
FCAFF33FE0BDFCA426003FC0C7D81FE0C7FC1B3F1B1FB3B3A4D9FFF0DA7FF8EC7FF8007F
9026FFE03FB5D8F03FB512F0A45C547ED362>14 D<120FEA3FC0EA7FE0EAFFF013F8A313
FCA2127FEA3FDCEA0F1C1200A5133C1338A31378137013F0A2EA01E0A2EA03C0EA0780A2
EA0F00121E5A5A12300E2376D221>39 D<15E01401EC03C0EC0780EC0F00141E5C147C5C
495A13035C495A130F5C131F91C7FC133E137EA25BA2485AA25B1203A2485AA3120F5BA2
121FA25BA2123FA290C8FCA35AA5127EA312FEB3A3127EA3127FA57EA37FA2121FA27FA2
120FA27F1207A36C7EA212017FA26C7EA2137EA2133E7F80130F8013076D7E8013016D7E
147C143C8080EC0780EC03C0EC01E014001B7974D92E>I<12E07E12787E7E7E6C7E7F6C
7E6C7E7F1200137C137E133E133F7F6D7E80A26D7EA26D7EA2130180A26D7EA380147EA2
147FA280A21580A2141FA315C0A5140FA315E0B3A315C0A3141FA51580A3143FA21500A2
5CA2147EA214FE5CA3495AA25C1303A2495AA2495AA25C49C7FC5B133E137E137C5B1201
5B485A485A5B48C8FC121E5A5A5A5A1B797AD92E>I<EE03804C7EB3B2007FBB12F8BC12
FCA36C1AF8C9D807C0C9FCB3B2705A4E4F7AC45B>43 D<120FEA3FC0EA7FE012FF13F0A2
13F8A3127F123FEA0F381200A513781370A313F013E0A2120113C0120313801207EA0F00
121EA25A5A12300D23768B21>I<B612FEA71F077F9C27>I<120FEA3FC0EA7FE0EAFFF0A6
EA7FE0EA3FC0EA0F000C0C768B21>I<1738177CA217FC17F8A2160117F0A2160317E0A2
160717C0A2160F1780161F1700A25E163EA2167E167CA216FC5EA215015E15035EA21507
5EA2150F5EA2151F93C7FCA25D153E157E157CA215FC5DA214015DA214035DA214075D14
0F5DA2141F92C8FCA25C143EA2147E147CA214FC5CA213015C13035CA213075CA2130F5C
A2131F91C9FCA25B133E137E137CA213FC5BA212015BA212035BA212075B120F5BA2121F
90CAFCA25A123EA2127E127CA212FC5AA212702E787AD93B>I<EC1FF891B5FC010314C0
90390FF81FF090391FC003F849486C7E017EC7127E49800001168049141F4848EC0FC000
0716E0491407000F16F0A34848EC03F8A2003F16FCA44848EC01FEA700FF16FFB3A5007F
16FEA56D1403A2003F16FCA4001F16F8A26D1407000F16F0A26C6CEC0FE0A26C6CEC1FC0
A26C6CEC3F806C6CEC7F00017F14FE6D6C485A6D6C485A90390FF81FF00103B512C00100
91C7FCEC1FF830517BCE3B>I<14075C5C147F5C1307133F000FB5FCB6FC13F913C1EAF0
011200B3B3B3A7497F010F13E0B712FEA4274F75CE3B>I<EC7FE0903803FFFE010F6D7E
013F14E0D9FF0013F8D801F8EB1FFCD803E06D7E4848EB03FF48486D138090C813C0001E
16E0001C157F003CED3FF012380078ED1FF81270A2B4ED0FFC13C07FA66C5A6C5A000EC8
FCC9EA1FF8A317F0163FA2EE7FE017C016FF17804B1300A24B5A4B5A5E4B5A4B5A4B5A5E
4BC7FC15FE4A5A4A5A4A5A4A5A5D4A5A4AC8FC147E5C4948141CEB03E0495A4948143891
C8FC131E5B5B491578485A48481570484815F048B7FCA25A5A5AB812E0A42E4F7ACE3B>
I<EC3FF849B57E010F14E090391FC01FF890397E0003FC01F86DB4FCD801E06D13804848
EC7FC0484815E048C8123F01C015F013F0486CEC1FF87FA56C5AA2EA03E0C9EA3FF0A317
E0167F17C016FF17804B13005E4B5A4B5A4B5AED3FC0DA07FFC7FC903803FFFC5DEDFF80
90C7EA1FE0ED07F8ED01FE6F7EEE7F8017C0EE3FE0EE1FF017F8A2EE0FFC17FEA2160717
FFA3120FEA3FC0487E487EA417FE160F5B6C4815FC90C8FC0078ED1FF87E003EED3FF06C
ED7FE06C7E6C6CECFFC0D803F0491380D801FC903807FE003A00FFC01FFC013FB512F001
0F14C0010391C7FC9038003FF830517BCE3B>I<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA
3FC0EA0F00C7FCB3A9120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C3376B221>
58 D<007FBB12F8BC12FCA36C1AF8CFFCB3007FBB12F8BC12FCA36C1AF84E1D7AAB5B>
61 D<EE03804C7EA34C7EA34C7EA34C7EA34C7EA24C7E16E7A203017F16C3A203038016
81A2DB07017F82A2030E80177FA24B80173FA24B6D7EA20378800370130FA203F0804B13
07A20201814B7FA24A488183A24AC78083A2020E82187FA24A6F7E021FB7FC4A82A30278
C8EA1FFC0270150FA202F0824A1507A249488284A249488384A249CA7FA24984010E177F
A2011E84193F133E017F8448486C4C7E000F01E04B487EB500FE037FEBFFFEA44F557CD4
58>65 D<B812FEEFFFC018F818FE26007FF8C73807FF806D4802017F011F6F6C7E727E72
7E727E727EA2727EA2721380A21AC0A384A360A21A80A2601A00A24E5A180F614E5A4E5A
F0FFE04D1380050790C7FCEF7FFC91B712E08418FE02F0C73801FF809438007FE0F01FF8
727EF003FE857213807213C0F17FE0A2F13FF0A21AF8191FA21AFCA81AF8193FA21AF019
7FF1FFE0A24E13C04E1380604E1300F03FFC013FEEFFF8496C02075BBA12C096C7FC18FC
18C046527AD153>I<DC1FFC14034BB500C01307030F02F0130F037F14FC912801FFF800
FF131F02070180EB1FC04A48C73807E03FDA3FF8913801F07FDA7FE0EC00F8902601FF80
ED3CFF4990C97E494882494882495A4948824948825C01FF834849177F91CBFC48193F48
5AA24848181FA2121F49180FA2123FA2491807127FA31A005B12FFAE127F7FA31A07123F
7FA2121FA26D180F000F190EA26C7E1A1E6C6C181C6C193C806C6D1778137F6E17F06D6C
EE01E06D7E6D6CEE03C06D6CEE07806D6CEE0F006D6D151E9026007FE0157CDA3FF85DDA
0FFEEC03F06E6C6CEB0FE0020101F8EBFF806E6CB548C7FC030F14F8030114E09226001F
FEC8FC48567AD355>I<B812FEEFFFE018FC18FF26007FFCC7000F13C06D4802017F011F
9238003FF8F00FFC727EF001FF727F737E737E737E190F86737EA2737E737EA21B8085A2
1BC01A7F1BE0A4F23FF0A51BF8AE1BF0A4F27FE0A41BC01AFF1B80A24F1300A24F5AA24F
5AA24F5A4F5A4F5A4F5A4F5A4E90C7FC4E5AF00FFCF03FF8013FEEFFE0496C020F5BBAC8
FC18FC18E04DC9FC4D527BD159>I<BB1280A426007FFCC8123F6D48030313C0011F1600
193F191F190F1907A21903A2F101E0A31900A6050E1470A41A00A3171EA3173E177E17FE
160791B6FCA49138F800071600177E173E171EA3170EA31A0EA31A1C94C8FCA41A3C1A38
A31A78A31AF0A21901A21903A21907F10FE0193F19FF013F1603496C153FBBFC1AC0A347
527BD150>I<BA12FCA426007FFCC712016D489138001FFE011F160318011800197E193E
A2191EA285A385A6F10380A2171CA296C7FCA5173CA3177C17FC1601160F91B6FCA49138
F8000F16011600177C173CA3171CA794C9FCB3497E49B4FCB712E0A441527BD14C>I<DC
1FFC14060303B56C130E031F02F0131E037F14FC912801FFF801FE133E0207903980001F
80DA1FFCC73807C07EDA3FF0913803E0FEDAFFE0EC00F049018015794990C9123D494816
1F4948160F49481607495A494816034A160113FF484916004890CBFC1A7E485AA2484818
3EA2121F49181EA2123F5B1A0E127FA397C7FC5B12FFAE127F6D4BB612FEA4003F93C700
3F13806D94380FFE001907121FA27F120FA26C7EA26C7EA26C7F6C7F137F806D7E6D6C16
0F6D7E6D7E6D6C161F6D01C0153D6D6D157DDA3FF815F8DA1FFE913803F07E912607FFC0
90380FE03E020101FC90387F801E6E6CB538FE000E031F02F81306030302E090C7FC9226
001FFEC9FC4F567AD35C>I<B70107B612F8A4C66C48C80003EBF0006D486F5B6D486F5B
B3AD91B9FCA402F8C9FCB3B1496C4B7F496C4B7FB70107B612F8A44D527BD158>I<B7FC
A439007FFE006D5A6D5AB3B3B3B0497E497EB7FCA420527BD12A>I<B712E0A4C66C90CA
FCEB3FFC6D5AB3B3A9191CA51938A61978A319F819F0A218011803A21807180F181F183F
18FF013F1503496C023F13E0BAFCA43E527BD149>76 D<B500FC95B512FCA36E5FD8007F
F2F800D93DFF943803BFF0011D62A2011C6DEE073FA36E6C160EA36E6C161CA26E6C1638
A36E6C1670A36E6C16E0A36E6CED01C0A26E6CED0380A36E6DEC0700A36F6C140EA36F6C
5CA26F6C5CA36F6C5CA36F6C5CA26F6C495AA36F6C495AA36F6D48C7FCA393387FC00EA2
706C5AA3706C5AA3706C5AA3706C5AA270B45AA3705BA3013E6E90C8FC137F496C4E7E00
0701F0027E4B7EB66C4BB612FC173CA35E527AD16B>I<B500FC030FB512F8A28080D800
3FDC007F13006D6DED0FF8735A011D6D6F5A011C6D6F5AA26E7E81143F6E7E81140F6E7E
82806E7F82806F7E82153F6F7EA26F7E6F7EA26F7F83816F7F83167F707E83161F707E83
8270138018C0827013E0A2EF7FF0EF3FF8A2EF1FFC18FE170FEF07FF1981837113C119E1
83F07FF119F9183FF01FFD19FF8484A28484A284A2197F193F133E017F171F496C160F00
0713F0B66C15071903A219014D527BD158>I<EE7FF80307B57E033F14F09239FFC00FFC
913A03FE0001FFDA0FF89038007FC0DA3FE0EC1FF0DA7F80EC07F84AC86C7E49486F7E49
486F7E4948707E4948707E4948707E4948707E017F844948707E91CA120348854848717E
A24848711380A2000F1AC049187F001F1AE0A34848F03FF0A3007F1AF8A249181FA300FF
1AFCAE6C6CF03FF8A5003F1AF06D187FA2001F1AE0A26D18FF000F1AC0A26C6C4D1380A2
00031A006D5F6C616C6D4C5A6E160F017F606D6C4C5A6D6C4C5AA26D6C4C5A6D6C4C5A6D
6C4B90C7FCD900FFED03FCDA7FC0EC0FF86E6C4A5ADA0FF8EC7FC0DA03FE4948C8FC913A
00FFC00FFC033FB512F0030714809226007FF8C9FC4E567AD35B>I<B812FCEFFFC018F8
18FE26007FFCC7381FFF806D4802017F011F9238007FF0F01FF8727E727E727E841A8072
13C0A21AE0197FA21AF0A91AE0A219FF1AC0A24E13801A00604E5A4E5A4E5AF07FE04D48
5A051F90C7FC91B712FC18F0188002F8CBFCB3AE497E497EB7FCA444527BD150>I<B812
C017FEEFFFC018F026007FFCC713FC6D48EC0FFF011F03017F9438007FE0727E727E727E
180785727EA28684A286A762A26097C7FCA24E5A614E5A4E5A4E5AF0FFC04D90C8FCEF0F
FEEFFFF891B712C04DC9FC839126F8000113C09338003FF0EF0FFC717EEF01FF85717F72
7EA2727EA2727EA985A81B0785180FA21B0F0607140E496C82496C6F141EB76EEB801C72
EBC03C96387FE0F896381FFFF0CC000713E09638007F8050547BD156>82
D<DA3FF0130349B55B010714C0011FECF00F903A7FE00FF81F49C712FED801FCEC3F3F48
48EC1FBF48486EB4FC48481403485A4980003F8190C97E5A83127E8312FEA283A37E837F
A27F007F93C7FC7F7FEA3FFC7F6C6C7E14F86CEBFF806C14F8EDFF806C15F06C15FE6C6C
806D15C0010F81010315F8D9007F80140F020080030F7F03001480161F040713C0160182
EF7FE0A2173FEF1FF0A200E0160FA31707A37EA318E07E170F7E18C06C161F6C17806D15
3F6D16006D157E6D15FED8FCFC4A5A017F4A5A26F83FC0EB0FF0D90FFEEB7FC0D8F003B6
5A48C64AC7FC023F13F848010113C034567AD341>I<003FBB12C0A449C79038F0000701
F06E48130001C0183F48C8EE0FE0007E1907007C1903A200781901A400701900A500F01A
F0481A70A6C91700B3B3AC4C7E030313FC027FB712E0A44C517CD055>I<B7020FB512F8
A4C66C48C96C13006D48EE0FF86D48705A735A735AB3B3B0010F17036280A20107170797
C7FC6E5E1303191E6D7E616D6D5D6E7E023F5E6E6C4A5A6E6C4A5A6E6C140FDA03FE4AC8
FC6E6C6C13FE913A007FF007FC031FB512F0030714C0030191C9FC9238001FF84D547BD1
58>I<B600FC030FB512E0A4C691CAEBFC00D97FFCEF3FF06D48EF1FC0011F616E71C7FC
130F1A0E6E171E0107181CA26E173C6D1838816D60A26F16F06D6081027F4C5AA281023F
4C5AA26F1507021F94C8FC81020F160EA26F151E0207161CA26F153C6E1638826E5EA270
14F06E5E821801037F5D82033F4A5AA2701307031F92C9FC82030F140EA270131E030714
1CA270133C6F143817806F5CA2EFC0F06F5C17E017E1047F5B17F193383FF380A217FF70
90CAFCA2705AA3705AA3705AA2705AA3705A53547ED158>I<B600F8010FB66C010FB512
E0A4000149C8001F01E0C8EBFE0026007FF803070180ED3FF04A94C9EA0FE0013F706078
5A6E83011F7095C7FCA26E83010F70170EA2866D6C4B5FA36D6C922603BFF05DA36F9126
071FF815786D1C70A26F020F6D15F06DDC0E0F5EA26F021E6D1401027FDB1C075EA26F02
3C7F023FDB38034B5AA2876E6C4A6C4BC8FCA36E6C4A6C6D130EA36F49486D6C131E0207
1A1CA26F01036F133C6E4B013F1438A2DC80076F13786E92C7001F1470A27048816E020E
020F5CA2876F6C480207495AA36F6C486E6C485AA370486E1387031F96C9FCA2DCFCF016
CF030F496E13CEA204FF17FE6F496F5AA36F496F5AA36F90C96C5AA36F48705AA34C1607
047C5FA30438705A73547ED178>I<B512C0A500F8C7FCB3B3B3B3B3B3A2B512C0A51278
74D921>91 D<B512C0A5EA0007B3B3B3B3B3B3A2B5FCA512787ED921>93
D<ECFFC0010F13F8013F13FE9039FF00FF80D801F0EB3FE0D803C0EB0FF0486C6D7E01F8
6D7E000F816D13016F7EA3707E6C5AEA01E0C9FCA6ED3FFF020FB5FC9138FFFC7F010713
00EB1FF0EB7FC04848C7FCEA03FC485A485A485A123F5B485A187012FF90C8FCA216FFA3
5D6D14BF007F14036DEB073F6C6C90390F1FC0E06C6C131E6C6C90393C0FE1C02707FE01
F013FF0001B5486C13806C6C90398003FE00D907FCC712F834367BB43B>97
D<EB7F80B5FCA41203C6FC137FB3A6ED07FC92387FFF800281B512E0913987F00FF89139
8F8001FC029EC7B4FC02BC6E7E02F86E7E4A6E7E4A6E7E4A1407844A6E7EA2841701A284
A283A21980AB19005FA360A24D5AA24D5A804D5A6E5D6E4A5AD97E784A5A6E4AC7FCD97C
1EEB01FE6E495A903A7807E01FF00201B512C0902670007F90C8FC90C7EA0FF839547DD2
41>I<EC0FFE91387FFFE049B512F8903907F801FE90391FE0001FD93F80EB078049C7EA
0FC001FE143F484815E00003157F485A485AA2485AEE3FC0003FED0F004991C7FCA2127F
A35B12FFAB127F7FA3123F6D1570121F6D15F0000F16E06D140112076C6CEC03C06D1580
6C6C14076C6DEB0F00D93FC0131E6D6C137C903907FC03F06DB55AD9007F1380DA0FF8C7
FC2C367CB434>I<17FF4BB5FCA4ED0007160182B3A6EC0FF8EC7FFF49B512E0903907FC
03F090391FE0007C49487F49C7120F01FE80484880485A000781484880A2485AA2485AA2
127FA35B12FFAB127FA27FA2123FA27F121FA26C6C5C00075D7F6C6C5C6C6C5C6C6C021E
7F6D6C017C13E0D91FC049EBFF8090390FF807E00103B512800100495ADA1FF091C7FC39
547CD241>I<EC0FF891B5FC010314C090390FF80FF090391FC003FC90397F8001FE49C7
7E4848EC7F804848143F49EC1FC0485A000FED0FE05B001F16F01607485AA2007F16F8A2
5B160312FF90B7FCA30180C9FCA8127F7FA2123FA26D1538121F17786C6C1570000716F0
6D15E06C6C14016C6CEC03C06C6C15806D6C130F6D6CEB1F00D90FF0133C903907FE01F8
0101B512E06D6C1380DA07FCC7FC2D367DB434>I<157F913803FFE0020F13F091383FC0
F891387F01FC903901FE03FE903803FC0714F81307EB0FF0A290391FE003FCED01F892C7
FC495AB3B612FEA426003FC0C7FCB3B3A580EBFFF0007FEBFFF8A427547DD324>I<EF1F
C0DA3FE0EBFFE0902701FFFC0313F001079039FF07E1F8903A1FE03FCF01903A3F800FFC
03903A7F0007F80101FE010314F04848903901FC004000036F1300491300000781A24980
000F82A8000793C7FC6D5CA200035D6D130100015D6C6C495A017F495A6E485A9039FFE0
3FC0D801C7B5C8FC01C113FC3903803FE091CAFCA57FA27F7F7F6CB612E016FF6C16C017
F0013F15FC8390B8FCD803F8C7001F1380D80FE0020113C04848EC007F4848ED1FE090C9
120F127EEF07F012FE481603A56C1607007E17E0007F160F6C6CED1FC06C6CED3F806C6C
ED7F006C6C15FED803FCEC03FCC6B4EC0FF0D93FF0EBFFC0010FB6C7FC010114F8D9001F
1380354E7DB43B>I<EB7F80B5FCA41203C6FC137FB3A6ED07FC92383FFF8092B512E091
3981F00FF8913983C007FC9139870003FE028E1301029C6D7E14B814B002F06E7E5CA25C
A35CB3AD2601FFE0903801FFE0B600C0B612C0A43A537CD241>I<1378EA01FE487E487F
A66C90C7FC6C5AEA007890C8FCB0EB7F80B5FCA41203C6FC137FB3B3A43801FFE0B61280
A419507CCF21>I<EC0780EC1FE0EC3FF0EC7FF8A6EC3FF0EC1FE0EC078091C7FCB0EC0F
F8EB1FFFA4EB003F140FA21407B3B3B2120C003F14F0387F800FEAFFC015E0141F15C0EC
3F80EA7F809038007F006C13FC6CB45A000713E0C690C7FC1D6885CF24>I<EBFF80B5FC
A41203C6FC137FB3A793B512F8A4043F138093381FFC0017F017C094C7FC163E5E5E4B5A
4B5AED07804BC8FC151E5D15FC1481EC83FEEC87FF148F029E7F9138BC7FC0ECF83F02F0
7F4A6C7EECC00F02807F4A6C7E6F7EA26F7E6F7F167F83707E161F83707E160783707E83
18802601FFC04913E0B6D8803F13FFA438537DD23E>I<EB7F80B5FCA41203C6FC137FB3
B3B3B13801FFE0B612C0A41A537CD221>I<01FFD907FEEC03FFB590261FFFC0010F13E0
037F01F0013F13F8912701F80FFC9038FC07FE913D03C003FE01E001FF00039026070001
9038038000C6010E6D6C48C76C7E6D48DA7F8E6E7E4A159CA24ADA3FF86E7E02605D14E0
4A5DA34A5DB3AD2601FFE0DAFFF0EC7FF8B6D8C07F9026FFE03FB512F0A45C347CB363>
I<01FFEB07FCB590383FFF8092B512E0913901F00FF8913903C007FC000349C66C7EC601
0E13016D486D7E5C143002706E7E146014E05CA35CB3AD2601FFE0903801FFE0B600C0B6
12C0A43A347CB341>I<EC0FFC91387FFF8049B512E0903907F807F890391FE001FE9039
3F80007F017EC7EA1F80496E7E48486E7E00038248486E7EA248486E7EA248486E7EA200
3F82A24848ED7F80A400FF17C0AB007F1780A26D15FFA2003F1700A2001F5E6D1401000F
5E6D140300075E6C6C4A5A6C6C4A5AA2D8007FEC3F806D6C49C7FC90391FE001FE903907
F807F86DB55AD9007F1380DA0FFCC8FC32367CB43B>I<90397F8007FCB590387FFF8002
81B512E0913987F00FF891398F8003FC000190399E0001FF6C01BC6D7FD97FF86E7E4A6E
7E4A6E7E4A140F844A6E7EA2717EA3717EA4711380AB4D1300A44D5AA24D5AA2606E140F
4D5A6E5D6E4A5A6E4A5A02BC4AC7FC029E495A028FEB07FC913987E01FF00281B512C0DA
807F90C8FCED0FF892CAFCB13801FFE0B612C0A4394B7DB341>I<DA07F81307DA7FFF5B
49B512C0903907FC03E0903A1FF000F81FD93FC0133C49486D5A49C7120E4848140F4848
6EB4FC000781485A4980121F82485AA2485AA4485AAB6C7EA46C7EA36C6C5CA26C6C5C12
076D5C6C6C5C6C6C141E6C6D5B6D6C5B90391FE001F090390FF807E00103B51280010049
5AEC1FF091C8FCB1040313C04BB61280A4394B7CB33E>I<01FFEB1F80B5EB7FF0913801
FFF8913803E1FC91380783FE0003EB0F07C6131EEB7F1C1438143091387003FC91386000
F0160014E05CA45CB3AA8048487EB612F0A427347DB32E>I<D907FE13C090387FFF8148
B512E33907F803FF390FC0007F4848133F48C7121F003E140F007E1407127C00FC1403A3
15017EA27E7F6C6C90C7FC13F013FF6C13F86CEBFF806C14E06C14F86C14FEC680013F14
80010714C0D9003F13E014039138007FF0151F00E0140FED07F8A26C1403A215017EA36C
15F0A26C14036C15E015076DEB0FC06DEB1F80D8FDF0EB3F0039F8FC01FE39F07FFFF8D8
E01F13E0D8C00390C7FC25367CB42E>I<EB01C0A71303A41307A3130FA2131FA2133F13
7F13FF5A5A001F90B512E0B7FCA326003FC0C7FCB3A71638AC6E1378011F1470A26D6C13
F016E0903807F801903903FC03C0903901FE07806DB51200EC3FFCEC07F0254B7EC92E>
I<D97F80EC7F80B591B5FCA400031503C61500017F157FB3AC17FFA35EA3013F5C6EEB07
7FA2011F020E7F6D6C011C13F06E0178EBFFC0903903FC01F06DB512E06D6C1380912607
FC00EB80003A357CB341>I<B60103B51280A4000301F09039007FF800C601C0EC3FE001
7FED1F8095C7FC133F171E6D7E171C6E143C010F1538A26E1478010715708001035DA26E
130101015D806D4A5AA2ED8007027F91C8FC15C0023F130EA2EDE01E021F131CA26E6C5A
A2EDF87802071370A26E6C5AA215FF6E5BA26E5BA36FC9FCA2153EA3151C39347EB23E>
I<B60007B5D8F007B5FCA400039027E0001FFEC713F06C0180D90FF8EC7FC06C0307ED3F
80F21F00017F0203151EA26D6C801A1CA26D6C496C5CA26E6E1478010FDA0E7F1470A26E
6F13F00107DA1C3F5CA26EEDC0010103DA381F5CA26E0178EBE0030101DA700F5CA26E01
F0EBF0076DDAE00791C7FCA2DA7F81ECF80EEEC003A2DA3FC36E5AEE8001A2DA1FE76E5A
93C7FCA2DA0FFEEC7F70A219F06E486E5AA36E486E5AA36E486E5AA36E486EC8FC50347E
B255>I<007FB5D8800FB51280A4C69026FC0003EBF000D93FF86D1380011F4BC7FC010F
15F801075D6D6C5C6E495A6D6C5C6D14076E6C48C8FCEDC01E6E6C5A021F133891380FF0
786F5A913807FDE002035BEC01FF5E80157F6F7E824B7E15FFEDE7F802017F913803C3FE
EC07814AC67E020E80021E6D7E4A133F4A6D7E4A80707E4948130749486D7E010781010F
6E7E013F8201FF8200076D010713F0B500F8011FEBFFE0A43B337FB23E>I<B60103B512
80A4000301F09039007FF800C601C0EC3FE0017FED1F8095C7FC133F6E141E131F171C6E
143C010F15388001075DA26E14F001035D8001014A5AA26E13036D5D1580027F49C8FCA2
6F5A023F130E15E0021F5BA2EDF03C020F133815F802075BA2EDFCF002035B15FE6E6C5A
A36E5BA26FC9FCA3153EA2151CA2153C153815781570A215F05D14015DA2003E495A127F
486C48CAFCA2140E141E495A6C5B007C5B383F03E06CB45A00075BD801FCCBFC394B7EB2
3E>I<001FB712E0A301FCC7EA7FC001E014FF018049138090C714004B5A001E14074B5A
485D4B5A153F4B5A00385D15FF4A5B93C7FC4A5A1407C7485A5D4A5A143F4A5A5D14FF49
5B92C8FC494814E01307495A5C495A013FEC01C0495A5C13FF485B91C71203485A120748
48140749140F485A003FED3F80484814FF491307B8FCA32B337DB234>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmti12 14.4 15
/Fm 15 116 df<ED01FC92380FFF80033F6D15789226FE03F0EC01FC912701F801F8EC03
FE913903F00078DA0FE0137C4A48013CEC07FC4A48013E140392C7121E027E17014AEF00
78010119F84A18F0010303FE14014948010116E004031503494818C01A074DEC0F804948
1800DC01F05C93C9123E013F604A5F4F5A4F5A017FEF0FC091CA485A197F03FE15FF9126
07FF8001037F021F6D903807E7E091263F83E0EB1FC3DAFE0191383F01F04A6C6C13FED9
3FF0913901F800F84A4A5A03014948137802C0494848137CD97F805D4DC7123C903AFFC0
03C01E48D9E007133E9139F00F803C3A03FDF81F003907FCFFFE9026F83FF81478000FD9
0FE0EB3DFC49C8EA3FFE121FA24848151F715A7148137C007FDC01E013784992C8FCA21A
F800FF615B190162A24F5AA24F5AA24FC7FC007F60191E616C6C177C616C6C4C5A4E5A6C
6C4C5A6C6C4C5A6C6C043FC8FC6C6C167C6C6C4B5AD93FC0EC0FE0D91FF0EC7F80D907FF
D907FEC9FC010190B512F8D9003F1480020101F0CAFC4F5771D45A>38
D<F001E01803851807A2180F181FA2183FA2187FA218FFA25F5F18DFEF079F85EF0F1F18
0F171E173E173C177C177817F0A2EE01E0160317C016071780DC0F007FA2161E18075E16
7C16785EA24B5AA24B5A15075E150F93C7FC031E81A24B1403A25D92B7FCA25CA2DA03C0
C71203A24A5A140F92C8FC141E855C845C14F85C13015C495A13075C130F131F133F017F
84496C5D00076D030F7FB500FE0203B61280A24A5CA2495579D457>65
D<DD1FF814384CB51478040F02C01370047F02F013F0923B01FFF803F801030790398000
7E03DB0FFCC7383F07E0DB3FF0141FDB7FC0EC0F8F4A4848EC07DF4A48C83803FFC04A5A
4A4881EC3FF0DA7FC06F13804A5A5B92CA127F49481800495A495A131F4A177E495A137F
5C01FF187C485BA24890CBFC1A78485AA2485A97C7FC121F5BA2123F5BA3127F5BA312FF
5BA65B191EA3193E193CA2197C197819F8007F606D1601611803003F4D5A6D5F180F6C6C
4CC8FC183E6C6C5E00075F6D4B5A6C6C4B5A6C6C4B5A6C6D4A5A6D6C023FC9FC6D6C14FC
D91FFCEB03F8903A0FFF801FE0010390B5128001004ACAFC021F13F8020313804D566ED3
54>67 D<020FB50503B512E0834A4F14C064DA000FF280006F4E90C7FC654B183F65047F
177B1CF3031F18F7983801E7F892381E3FC0F303C7033E18CF9838078FF0033CEF0F0FA2
037CEF1E1F650378173C1B7803F8183F09F05B4B6C7EF201E00201197FE003C05B03E0EE
0780A2020394380F00FF9AC8FC03C0161EA202074D5A08785B1580706C14F0020F1803DF
01E05B0300ED03C0A24A933807800764021EEE0F00A2023E041E130F4F5C143C706C5B02
7C181F4F5C14784E5A02F84B48133F644A4B5AA201014CC7127F061E5D5C600103DA03FC
15FF4E92C9FC5C600107DBFDE05B634AECFFC0A2010F4C13036391C791C7FC496C5C013F
1807496C6D5A2603FFF0171FB6008049013FB512FE5FA25F6B5277D169>77
D<DC07FCEB038093393FFF800793B500E013000303ECF80F923A0FF807FC1F923A3FC000
FE3F4B48EB3F3E03FEC7EA1F7E4A48EC0FFE4A5A4A486E5A4A5A18034A5A4A485DA24AC8
1201A24A5E5CA301015FA3180361A295C8FC80A28181816D13F815FF16E06E13FE6EEBFF
C017F86E80020714FF6E81020081031F801501DB003F7F16071600EF3FF8171FA2170FA2
1707A4D803C01503A217071207605BA2000F160F60A24D5A487E4D5AA24DC8FC486C157E
17FE6D4A5A6D4A5A007F4B5A01FE4A5AD87E7FEC3FC0267C3FC0495A28F81FF803FEC9FC
0107B55AD8F00114F0486C6C138048D907FCCAFC415677D342>83
D<EC01FCEC07FF021FEBC0E091397F03E3F8903901FC01F3903903F800FF4948137F4948
5C4948133F495A137F49C76C5A5B1201485A5F120749143F120F495D121F167F123F4992
C7FCA25E127F495CA21501A248485CA21503EF03C016F890C7FC150717076CDA0FF01380
A2031F130F033F14006C6CEB7FE003FF5B001FD901F7131E9026C003E7133E000F903907
C3F03C2707E00F83137C3B03F03F01F8F83B01FFFC00FFF026007FF06D5AD91FC0EB1F80
323574B33C>97 D<ED3FC0913801FFF8020F13FE91383FE07F91397F001F80D901FE130F
D903F8EB07C0494813034948131F4948133F4948137F137F49C7FC485A17804848EC3F00
000715084991C7FC120FA2485AA2123F5BA3127F5BA4485AA5127FA2EE0180EE03C01607
003FED0F80161FEE3F006C6C147E5E6C6CEB03F06C6CEB0FE06C6CEB3F802701FE03FEC7
FC39007FFFF8011F13E0D907FEC8FC2A3574B336>99 D<ED7F80913807FFF0021F7F9138
7F80FE903901FE003FD907F87F49481480D91FC0130F495A137F49C7FC485A485A000715
1F491500000F5D49147E001F15FE4B5A4848EB07F0ED7FE091387FFF8048B548C7FC15E0
0280C8FC01C0C9FC12FF5BA590CAFCA66C1503EE0780160FEE1F006C6C5C167E001F5D6D
495A000FEC07E06C6CEB1FC06C6C017FC7FC3901FC07FC6CB512F0013F13C0D907FCC8FC
293573B336>101 D<EC01E0EC03F0EC07F8140FA315F015E0EC038091C7FCB2EB07C0EB
3FF0EB7FFCEBF87C3801E07E3803C03E3807803F120F495A5A121E123E003C5B5C127CEA
78015CEAF8035C120013075CA2130F5CA2131F5C133F5CA2137F91C7FCA24913785BA200
0114F84913F01203EBF80115E0A2EC03C013F0EC0780140F15000001131EEBF87C6CB45A
EB7FE0EB1F801D5077CE24>105 D<17F0EE03F8EE07FCA2160F17F8160717F0EE03C093
C7FCB2ED0FE0ED3FF8EDFFFC913801F07E4A487EEC0780DA0F001380141E143E5C147814
F85C0101147F5C010315005C01075CA290C85AA21501A25EA21503A25EA21507A25EA215
0FA25EA2151FA25EA2153FA25EA2157FA293C7FCA25DA25DA21401A25DA21403A25DA214
075D140F001E5C387F801F5D00FF495A4AC8FC14FEEB01FC48485A38FC0FF0387FFFC000
1F90C9FCEA07F82E6784CE24>I<EC3FE0EB3FFF495BA3EB007F5D143F147FA292C9FCA2
5CA25CA21301A25CA21303A25CA21307A25CA2130FA25CEE01F8011FEC0FFCEE3FFF4AEB
7C1F9338F00F80013F903803E01F923807807F9139800F00FF151E017F131C4B4813004A
487E4B5B4948481378020391C7FC49485A4AC9FC0001131E5CEBFCF8EBFDF03803FFC080
14FCECFF80D807F813E0EC1FF09038F007F86E7E000F6D7E1400497F81121F171E5BA200
3F163E4B133C495BA2007F5EA290C7FC5F5A92387E01E0481503033E5B92383F0F80486E
B4C7FCED07FE0070EC01F8315477D236>I<ECFF8090B5FC15005AA2EA00016D5AA21301
A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C7FCA25B
A25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA25BA2127F14
781300A24813F85C5AA213015C12FC13035C1307007E5B130F6C48C7FCEA1FFE6C5AEA03
F0195475D21E>I<013EEC1FE0D9FFC0EBFFFC48D9E0037F3C03E3F00FE07F803B07C1F8
1F001FD80F81017E80902601FCF8130F001FD9FDF080001E5C14FF003E5C003C5C92C7FC
5B007C5B12785CD8F807151F4A5D12005C010F153F605CA2011F157F95C7FC5C5F013F5D
A24A13015F137F0403EB01E091C713F8A2490207130305F013C049140FEFE00700011880
A249EE0F0017C00003171E183E49163C706C5AEFE1F0496EB45A701380D801C0DA003EC7
FC3B3577B342>110 D<013F14FF9026FFC00313C048D9E00F13F03B03E3F03F01F83B07
C1F87C007C018149137E3B0F01FDF001FE9138FFE003001E14C0A2003E91388007FC003C
EC000317F84948EB01E0007C92C7FC00785BA238F807F8A200005BA2130FA25CA2131FA2
5CA2133FA25CA2137FA291C9FCA25BA25BA21201A25BA21203A25BA35BA2EA01C02F3577
B331>114 D<EC01FE91380FFFC0023F13F09138FE03F8903901F000FC4948137C494813
3E4948131E011F143E91C712FE1501133EA2137E16FCED00F8017F1400A2808014FC9038
3FFFE015F86D13FE6D7F6D1480010114C06D6C13E014079138007FF0151F150F15071503
A2121FEA7F80A200FF15E0A390C7EA07C05A00F8EC0F80151F1600007C143E007E14FC6C
495A391FE00FE00007B51280000149C7FC38003FF0273577B330>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmr12 17.28 43
/Fn 43 122 df<EE0FFE4BB512C0030F14F092397FF803FC913A01FF80003E4A48C77EDA
0FF8EC07804A486E7EDA7FE0141F4A48EC7FE0494914FF4990C8FCA249484A7F715B495A
A2011F705A4A6F5A060EC7FC95C8FCB24CB512F0BAFCA426001FF8C8FC187FA2183FB3B3
AD496C4B7E90B5913801FFFEB748B612FEA447657DE44E>12 D<B712F0A824087EA22F>
45 D<153815F814011403140F143F14FF1307137FB6FC143F13F81380C7FCB3B3B3B3A3
4A7E4A7E0107EBFFC0007FB712FCA42E5F74DE46>49 D<EC07FF027F13F049B512FC0107
14FF90261FF00F13C090263F000113F0017E6D6C7E01F8EC1FFE48486E7E48486E138048
5A496E13C0000F6F13E048C8FC001E6F13F0003E17F8003C167FA2007C17FC0078163FA2
EAFFC06D16FE6D151F7FA66C5A173FEA1FC00007C913FCCAFCA2177F18F8A2EFFFF0A218
E05E18C05E18804C13004C5A5F161F5F4C5A4C5A4C5A5F4B90C7FC4B5A4B5A5EED0FE04B
5A4B5A4BC8FC15FE4A5A5D4A5A4A5A4A5A4A5A4AC8120E147E5C4A151C495A495A495A49
5A49C9123C013E1638133C4916785B484816F848B8FC5A4817F05AA25A5AB9FC18E0A337
5F79DE46>I<913803FFC0021F13F891B6FC902603FE0113C0903A0FE0003FF049C76C7E
013EEC0FFE01786E7E496E7F4848824848808448486E7F13F813FE486C82A280177FA217
FFA26C90C8FCA26C5AD800F85E90C9FCA24C5BA260A24C5BA24C90C7FC5F4C5A5F4C5A4C
5A4C5A4CC8FCED03FEEDFFF8027F13C05E16FC91380001FF9238003FC0EE1FF0EE0FFC70
7E706C7E707F84707F177F8484173F84A28483A21980A21203EA1FE0487E487E487EA519
005B5F6C5A01C05E007CC9FC4D5A7E606C4C5A6C7E6D4A5B6C6C4A5B6C6C4A5BD801FC4A
90C7FC6CB44A5AD93FC0EB3FF8903A1FFC01FFF00107B612C0010192C8FCD9003F13F802
03138039627ADE46>I<170F5FA25F5FA25FA25E5EA25E5EA25E5E163B167B16F316E315
01ED03C316831507ED0F03150E151E153C1538157815F015E0140115C0EC038014071500
5C141E141C143C5C147014F0495A5C1303495A91C7FC5B131E131C133C5B137013F05B48
5A12035B48C8FC5A120E121E5A123812785ABA12F8A4C9000790C7FCB14C7FA2047F13F0
92B712F8A43D607CDF46>I<486C16C001E0150301FC151FD9FF80ECFF8002FC011F1300
91B7FC5F5F17F05F5F94C7FC16FC16F001E7148001E001FCC8FC91CAFCB3913801FFC002
0F13F8023F13FE9139FF00FF80D9E3F8EB3FC0D9E7E0EB0FF0D9EF806D7E01FEC76C7E49
81496E7E496E1380A249ED7FC06C4816E090C9FCEF3FF0A218F8A3EF1FFCA518FEA5EA0F
80EA3FE0487E12FF7FA318FC5BA249153F5B0076C913F81270007817F0177F003817E012
3C6CEEFFC0A26C4B13806D4A13006C6C5D6C6C4A5A6C6C4A5A6D4A5AD8007EEC7FE06D6C
495A90261FF00790C7FC0107B512FC010114F06D6C13C0DA0FFCC8FC376279DE46>I<EF
03C04D7EA34D7EA34D7EA34D7EA34D7EA394B5FCA24C8017E7A204038017C3A204078017
81A2040F801700A24C80041E137FA2043E80043C133FA24C80181FA24C8084A24B488184
0303824C7FA20307824C7FA2030F8293C8FCA24B82031E157FA2033E82033C153FA2037C
820378151FA24B8285A24AB97EA34A8403C0C812030207844B81A2020F8492CAFCA24A84
021E177FA2023E84023C173FA2027C840278171FA202F8844A83A2494885861303880107
84496C85131F496C4D7FD9FFFE4D7F00076D6C043F13FEB600F8031FB7FCA460667CE569
>65 D<B912FEF0FFE019FCF1FF80C66C01C0C700077F010F49020113F092C96C7E6DEF3F
FE737E737F737F85737F878587A2747EA3871A3FA61A7FA263A21AFF63A24F5B63614F5B
4F5B4F90C7FC4F5AF17FF84F5A060313C0061F90C8FC943803FFFC92B712E019FCF1FF80
92C913F0F13FFCF10FFE736C7E737F737F737F747E87747E1A1F87A2741380A21CC086A2
1CE0A91CC0A262A21C80621C006263505A1AFF4F5B4F5B4F5B4F5B49053F5B6FDBFFFEC7
FC017F6D02075BBB12F01AC04FC8FC19E0536279E163>I<DD3FFC15700407B512C0043F
02F014F04BB600FC130103079038F001FF031F90C7381FC003DB7FF8913807E007912601
FFE0EC01F84A0180913800FC0F020F90C9EA3E1FDA1FFC161F4A48EE0FBF4A48EE07FF4A
4882494982495B4990CBFC4948187F131F4948183F5C017F191F495A1B0F485B1B07485B
A2481A035C5A1B014890CCFCA35A491900A3127F1C00A25BA212FFB0127FA27FA3123F1C
70A27F7EA36C7F1CF06C1BE0807E1B016C6D19C0A26C6D18031C806D6C1807013F1A006E
606D6C180E010F191E6D6C606D6D5F6D7F6D6D5F6E6C4C5A6E6C4C5A6E6C4C5A6EB4041F
C7FC02036D153E6E01E015FC9126007FF8EC03F0DB1FFFEC0FE0030701F0EBFF80030190
B548C8FCDB003F14F8040714C09326003FFCC9FC546878E465>I<BAFC19F019FE737EC6
6C01E0C7000F13E0010F49020013F84BED3FFE6DEF0FFF07037F7313E0736C7E747E747E
747E747E8688747F747FA2757E881B3F881B1F88A2757EA3751380A31DC0A3871DE0A51D
F0AF1DE0A61DC063A21D80A3511300A3515AA2641B3F64515AA2515A6462505B5090C7FC
505A505A505A505A505A07035B070F90C8FC49EF3FFE6FEDFFF8017F6D020F5BBB12C04F
C9FC19F096CAFC5C627AE16B>I<BC12FCA4D8003F01F0C8001F7F01074915004B161F6D
18071A031A011A001B7E87A287A287A287A21C80A21B03A6DE0380EB01C0A498C7FCA418
07A4180F181F183F187FEF07FF92B7FCA49238C00007EF007F183F181F180F1807A41803
A31C1CA31C38A295C9FCA41C70A41CF0A21CE01B01A31B03A21B071CC01B0FA21B1F1B3F
1B7F973801FF806249180F6F167F013F6D030FB5FCBDFC1C00A356627BE160>I<BC12F0
A4D8003F01F0C8003F13F801074915014BED007F6D181F1A0F1A031A01A2F200FC1B7CA2
1B3CA31B1CA21B1EA21B0EA61B07A2F00380A21B00A61807A4180F181F183F187FEF07FF
92B7FCA49238C00007EF007F183F181F180F1807A41803A895C9FCB3A5497F81013F13FE
B812E0A450627BE15C>I<DD3FFC15380407B512C0043F02F814784BB600FE14F8030790
39F800FF80031F018090381FE001DB7FFCC73803F003DBFFE0EC00F8020349ED7E074A90
C9EA3F0FDA1FFEEE0F8FDA3FF8EE07DF4A48EE03FF4A4882495B4949824990CB127F4919
3F495A4A181F495A017F190F495A1B07485B1B03485BA2481A015C5A1B004890CDFCA35A
491A78A3127F99C7FCA25BA212FFB0127F6D94B712FEA4003FDE000F1400080113FC745B
6D197F7EA36C7FA27E807EA26C7FA26C7FA26D7E6D7E131F806D7E6D6D17FF7F6D7F6D6D
5EDA7FF85E6E6C17EF6E6CEE07CF912607FF80ED0F876E6DED1F03020001F0ED7E01DB7F
FC913801FC0092261FFF80D907F81378030701F8D97FE01338030190B600801318DB003F
4AC9FC040714F09326003FFECAFC5F6878E46E>I<B8FCA4D8003FEBFC00010713E0A26D
5BB3B3B3B3AC497FA2013F13FCB8FCA428627BE133>73 D<B812C0A4C66C01FCCBFC010F
13E05D6D5BB3B3B21BE0A5F201C0A61A03A31B801A07A31A0FA31A1F1A3F1B0062626161
61191F49177F6F0203B5FC017F6D023F5BBBFCA44B627AE158>76
D<B600C0073FB512F06F61A26F96B6FCD8003FF5C000902607BFF8952601DFFEC7FCA201
0364DA9FFCF0039FA3DA8FFEF0071FA2DA87FF180EA302836D171CA302816D1738A20280
6D1770A36F6C17E0A26F6CEE01C0A36F6CEE0380A36F6CEE0700A26F6C160EA36F6D5DA3
6F6D5DA26F6D5DA3706C5DA3706C4A5AA2706C4A5AA3706C4AC7FCA3706C140EA2706D5B
A3706D5BA3706D5BA2716C5BA3716C485AA3716C485AA2716C48C8FCA3943807FF0EA271
139CA37113F8A3715BA2725A497EA2496C6F5A496C507EEB7FFC0003B56C6E484AB512C0
B600FE0507B712F072C7FCA2180674627AE181>I<B66C4BB612F08181A2D8001F6DDB00
0FEBFE0001076D040113F09738007FC06F715A6E6C71C7FC143F6E6C170E82806E7F8280
6E7F82806F7E82153F6F7E83816F7F83816F7F8381707EA2707E707EA2707F707FA2707F
707FA2707F717EA2717E717EA2717F8583717F8583717F85187F727E85847213801AC084
7213E01AF0847213F81AFC197FF13FFE1AFF8573138E1BCE857313EE1BFE8585A21A7F1A
3FA21A1F1A0FA21A071A03497E1A01496C1700497ED9FFF8187E000701FF183EB612F81B
1E1B0EA25C627AE169>I<BAFC19F019FEF1FFC0D8003F01F0C7000F13F001074902007F
4BED3FFE6DEF0FFF737F07017F737F747E87747EA2747E87A3741380A31CC0A91C80A350
1300A263A2505AA2505A505A634F5B07075B4F90C7FCF13FFCF1FFF8060F13E092B81280
07FCC8FC19C003C0CCFCB3B3A3497FA2013F13FCB8FCA452627BE160>80
D<B912C018FEF0FFC019F8C66C9026E0000113FE010F499039000FFF804B020313E06D04
007FF13FFC737E737E737F737F878587737FA2871A7FA287A963A2505AA26361634F5B63
4F90C8FC4F5A4F5A4F5AF1FFE006031380DE1FFEC9FC943801FFF892B712E04ECAFC8492
2680000313E09438007FF0F01FFCF007FE726C7E727F727F737EA2737E86191F86A2190F
86A587A787A6751307A385A28773150F1D0E496D81736D131E017F01F8191CB700FC6F6C
133C083F1478E00FFE13F0973907FF83E0CD0001EBFFC0746C1380983807FE0060657AE1
67>82 D<DA03FFEC0380023F13F091B500FE13070103ECFF8090260FFE00EBE00FD91FF0
90380FF01FD97FC0EB01F849C8EAFC3F4848153E4848ED1F7F49ED0FFF00078248488149
81001F82A24848167FA2007F173F5B181FA200FF170FA418077FA36D1603A27F127F7F6D
93C7FCA26C7E6D7E6C7F14F06C13FEECFFE06C14FE6CECFFE016FE6CEDFFC06C16F86D15
FE011F816D16C0010382010082023F81020381DA003F80030380ED003F04071480EE007F
051F13C0837113E0837113F083A2187F19F800E0173FA2181FA4180F7EA47E19F0A27E18
1F6C18E0A26CEF3FC07F19806D167F6DEEFF007F6D4B5A017E4B5A486C4B5AD91FC04A5A
26FC0FF04A5AD903FEEC7FC029F800FFF003FFC7FC48013FB55A020F14F848010114E091
26000FFEC8FC3D6878E44E>I<001FBC12FEA49126E000079038F800014848C76C499038
001FFF01F06E49140349850180737E90C884A2003E87A2003C87A348F30780A400701B03
A748F301C0A5C995C7FCB3B3B3A44C7F4C7F043F13FF020FB812FCA45A617BE065>I<EC
1FFC91B512C0010714F090391FE00FFC90393F0001FF01FC6D7FD801F0EC7FE0496E7E48
486E7E486C140F01FC81486C6E7E7F707EA3707FA26C5AA2EA01F8C9FCA60303B5FC92B6
FC140F027F1381903901FFF00101071300EB1FFCEB7FF0EBFFC000035B4890C7FC485A5B
485A123F5B007F181C5BA212FF5BA25EA35E7F007F5D161E6C6C91391C7FC0386D143C6C
6C14786C6C903A01F03FE070D803FF903A03E01FF9F06C9026E01F80EBFFE029007FFFFE
000713C0010F01F86D1300010001C0EB00FC3E417ABF46>97 D<14F8EA07FFB5FCA41201
EA007F133F131FB3AAEE1FF893B57E030314E092390FE01FF892393E0003FE0378EB00FF
DAF9F0EC7FC0DAFBE06E7EDAFF806E7E727E92C86C7E4A15034A82727E5C7213801AC0A2
197F1AE0A21AF0A2193FA31AF8AC1AF0A2197FA21AE0A3F1FFC0A21A80601A006E5D616E
4B5A6E4B5A02E75E6F4A5ADAC3C04A5ADA81E0ECFF80DA80F84990C7FCDA003EEB07FC92
391FC03FF0011E0107B512C0011C010191C8FC90C8EA3FF045657DE34E>I<EDFFE00207
13FE023F6D7E9139FFC01FE0903A01FE0001F8D907F8EB007C4948141F4948804948EC07
804948EC0FC001FF157F4890C8EAFFE048485CA2485A120F5B121F7013C0123F49ED3F00
94C7FC127FA35B12FFAD127F7FA3123FA27F121F18706C7E18F06C6C16E0A26C6C15016C
EE03C06E15806C6D14076D6CEC0F006D6C141ED90FF85C6D6C5C6DB4495A01009038E01F
C0023FB5C7FC020713FC020013E034417BBF3E>I<F007C0EF3FFF0407B5FCA4EE000F17
038383B3AAED7FE0913807FFFC021F13FF91397FE00FC0903A01FF0001F0D907FC6D7E49
48143CD91FE08049488049488001FF814890C8FC4848810007825B120F5B121FA2485AA3
127FA25BA212FFAC127FA37FA2123FA2121F7FA2120F6C7E5F6C6C5D12016D5D6C6D5C6D
6C141E6D6C4A7F6D6C4A7FD907F8494813FCD903FED907E0EBFFF8903A00FFC03F809139
3FFFFE00020F13F8020001C0ECC00045657BE34E>I<913801FFC0020F13FC027F13FFDA
FF8013C0903A03FE003FE0D907F8EB0FF0D91FE06D7E49486D7E49486D7E01FF6E7E91C8
13804848157F000317C04848153F18E0485A171F001F17F05B123FA2170F007F17F8A25B
A212FFA290B8FCA301E0CAFCA8127FA27FA2123FA36C6C1638A2120F6D1678000717706C
6C16F018E06C6C15016C6DEC03C0017FED07806D6CEC0F006D6C5C6D6C143ED907FC14F8
D901FFEB03F0903A007FE01FE06EB51280020749C7FC9138007FF035417CBF3E>I<ED07
FCED3FFF92B512C0913903FC07E091390FF803F091391FE00FF891387FC01F9139FF803F
FCA24913005B5C13074AEB1FF8010FEC0FF0EE03C093C7FC495AB3A4B712F0A426001FF8
C8FCB3B3AF80133F90B57EB712C0A42E657CE42B>I<F00FE0F07FF8DA03FE903801FFFC
913B3FFFE007F03C91B539F80F80FE903B03FE03FE1F00903A07F800FF3CD91FE090383F
F801494890381FF0004948010F14FC01FF6F133891C700071400488248486E7EA2000782
4980A2000F83AA000794C7FCA26D5C00035EA26C6C4A5A6C5E6E130F017F5D6D6C495A6E
495AD97FF801FFC8FC9039F3FE03FE01F0B512F82601E03F13E0DA03FEC9FC91CBFC485A
A37FA37FA27F6C7E13FF91B6FC6C16FCEFFF806D16E06D16F86D8284017F82D801FEC814
80D803F8030713C0D80FF0030113E04848ED007F49EE3FF04848161F007F170F90CA1207
19F812FE1803A6007FEF07F0A26D160F6C6CEE1FE0001F18C06C6CEE3F806C6CEE7F00D8
03FCED01FE6C6C4B5A26007F80EC0FF0D91FF0EC7FC0D907FFD907FFC7FC010190B512FC
D9003F14E0020101FCC8FC3F5F7CC046>I<14F8EA07FFB5FCA41201EA007F133F131FB3
AAEE0FFC93387FFFC04BB512F0923907E01FFC92390F8007FE92393E0003FF03786D7F4B
6D7FECF9E04B6E7E14FBECFF8092C8FC727E5CA35CA35CB3B3496C4B7E90B5913801FFFE
B748B612FEA447647CE34E>I<EB1F80497E497E497E487FA66C5B6D5A6D5A6D5A90C8FC
B314F8EA03FF127FA41201EA003FA2131FB3B3AC497E90B5FCB612FEA41F607CDF27>I<
14F8EA07FFB5FCA41201EA007F133F131FB3B3B3B3AD497E90B5FCB7FCA420647CE327>
108 D<D901F0D90FFCED1FF8D807FF91267FFFC091B57EB549B500F0010314E0922707E0
1FFC90390FC03FF892270F8007FE90391F000FFC92273E0003FF017C6D7E000102786DD9
80F06D7ED8007F496DD9C1E06D7F90263FF1E0EDC3C0011F4991267FE3806D7F02F316E7
DAF78003EFC8FC92C813EE02FFDB3FFE6F7E4A5EA34A5EA34A5EB3B3496C4B6C4B7E90B5
912601FFFE020313FCB748B6D8FE03B612FCA46E3F7CBE75>I<D901F0EB0FFCD807FF91
387FFFC0B549B512F0923907E01FFC92390F8007FE92393E0003FF000102786D7FD8007F
496D7F90383FF1E0011F496E7E14F3ECF78092C8FC02FF6F7E5CA35CA35CB3B3496C4B7E
90B5913801FFFEB748B612FEA4473F7CBE4E>I<ED7FF00207B5FC021F14C091397FC01F
F0903A01FE0003FCD903F8EB00FED90FF0EC7F8049486E7E49486E7E49486E7E49C86C7E
48486F7EA248486F7E0007834981000F188049167F001F18C0A2003F18E0A249163F007F
18F0A400FF18F8AC007F18F0A36D167F003F18E0A3001F18C06D16FF000F1880A26C6C4B
130000035F6D150300015F6C6C4B5A6D6C4A5A6D6C4A5A6D6C4A5A6D6C4A5AD907FC4948
C7FCD901FEEB03FC903A007FC01FF0021FB512C0020791C8FC9138007FF03D417CBF46>
I<02F8EB1FF8D807FF91B57EB5010314E092390FE01FF892393E0007FE0378EB01FFC6D9
F9F06D13C090263FFBE06E7EDAFF806E7E6D707E92C86C7E5C4A6F7E727E5C7213801AC0
A2841AE0A2F17FF0A5F13FF8ACF17FF0A41AE019FFA21AC0601A80601A006E5D616E4B5A
6E4B5A4E5A6F5DDAFBC04A5ADAF9E049485ADAF8F84990C7FC033EEB0FFC92391FC03FF0
0307B512C0030191C8FC9238003FF093CAFCB3A3497E90B5FCB7FCA4455B7DBE4E>I<D9
01F0EB7F80D807FF903801FFE0B5010713F892381F81FC92383E03FEED7C0700019138F0
0FFFEA007F90383FF1E090381FF3C0158014F792380007FEEE03FC02FFEB00F04A1400A3
5CA55CB3AF80133F90B57EB712E0A4303F7DBE37>114 D<9139FFE00380010FEBFC0701
7FEBFF0F9039FF001FDFD803F8EB03FFD807E07F48487F4848143F123F90C8121F48150F
127E160712FEA36C1503A27FA27F6D91C7FCEA7FF813FE383FFFE014FF6C14F86C14FE6F
7E000315E06C15F86C81013F80010F8001011580EB000FDA007F13C0150F030313E01500
00E0157FEE3FF0161F7E160FA216077EA37E17E07E160F6C16C06D141F6D1580EE3F006D
5CD8FEF814FED8FC7CEB03F83AF83F801FF0D8F00FB512C0D8E00391C7FC9038007FF02C
417BBF37>I<1438A71478A414F8A31301A31303A21307130F131FA2137F13FF1203000F
90B61280B8FCA326001FF8C8FCB3AE17E0AE6D6CEB01C0A3010714036E1480010314076E
14006D6D5A6DEBC01E91383FF07C6EB45A020713E09138007F802B597DD737>I<02F8ED
01F0D807FFED0FFFB54AB5FCA40001ED0003D8007F1500013F167F011F163FB3B2187FA3
18FFA3010F5DA26E5C0107ED07BF183F0103030F7F6E021E7F6D6C023C13FF6D6D01F814
FE91393FF007E0020FB512C0020314009126003FF8ECF00047407CBE4E>I<B600F80107
B512E0A4000391C81400C601FCED3FF86D486F5A013F17C0180F011F5F6E93C7FC130F18
0E6E151E0107161C806D5EA26F14786D1670816D5EA26F1301027F5DA26F1303023F5D81
021F4AC8FCA26F5B020F140E8102075CA26F133C6E143816806E5CA2EEC0F06E5C16E092
387FE1C0A216F3033F5B16FB6FB4C9FCA36F5AA26F5AA36F5AA26F5AA36F5A433F7DBD4A
>I<B600F8013FB512E0A4C602E0010FEBFC00013F0180010313E06D90C714806D6F48C7
FC6D5E6D6D14F06D5E6F495A6D7F027F4A5A6F49C8FC6E6C131E6E6C131C020F143C6F5B
6E6C5B6E6D5A6E1381EEC3C06EEBE7806FB4C9FC5E153F6F5A150F826F7E6F7FA2834B7F
4B6C7EED1E3F033C7F9238381FFCED780F03F07F4A486C7E4B6C7F02037FDA0780804AC7
7F021E6E7E021C143F023C814A6E7E02F86E7E495A01036F7E01076F7F010F83013F5DD9
FFF816F0000F6D021F13FCB6027FEBFFFCA4463E7EBD4A>120 D<B600F80107B512E0A4
000391C81400C601FCED3FF86D486F5A013F17C0180F011F5F6E93C7FC130F180E6E151E
0107161C806D5EA26F14786D1670816D5EA26F1301027F5D81023F4A5AA26F1307021F92
C8FC81020F140EA26F131E0207141C816E5CA2EE80786E147016C06E5CA216E1037F5B16
F192383FF380A216FF6F90C9FCA26F5AA36F5AA26F5AA36F5AA26F5AA215015E15035EA2
150793CAFC5D150EA2151E151C001F143CD87FC01338A2486C5B15F05D14014A5AD87FC0
5B4948CBFC383E001F143E381F80FC380FFFF000035BC66CCCFC435B7DBD4A>I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 331 -168 3198 20 v 331 2228 20 2396 v 1268 261
1285 4 v 1268 449 4 188 v 1302 391 a Fn(MILP)45 b(Approac)l(h)j(for)p
2549 449 V 1268 453 1285 4 v 2551 493 42 196 v 1308 493
1285 42 v 1093 513 1634 4 v 1093 700 4 188 v 1127 642
a(Custom)g(Datapath)f(Design)p 2723 700 V 1093 704 1634
4 v 2725 744 42 196 v 1133 744 1634 42 v 1068 1245 a
Fm(Serkan)41 b(Askar)g(&)h(Maciej)e(Ciesielski)650 1625
y Fl(Electrical)c(and)i(Computer)e(Engineering)g(Departmen)m(t)962
1767 y(Univ)m(ersit)m(y)h(of)h(Massac)m(h)m(usetts,)f(Amherst)p
3510 2228 20 2396 v 331 2247 3198 20 v 3519 2287 50 2434
v 371 2287 3198 50 v 1930 2373 a Fk(1)p 331 3132 3198
20 v 331 5528 20 2396 v 994 3241 1833 4 v 994 3428 4
188 v 1028 3370 a Fn(Datapath)47 b(Syn)l(thesis)h(Problem)p
2823 3428 V 994 3432 1833 4 v 2825 3472 42 196 v 1034
3472 1833 42 v 524 3873 a Fj(\017)i Fl(Designing)38 b(la)m(y)m(out)e
(for)i(high-p)s(erformance)d(datapaths.)524 4252 y Fj(\017)50
b Fi(Approac)l(h:)i Fl(Mixed)38 b(In)m(teger)g(Linear)g(Programming)o
(.)524 4632 y Fj(\017)50 b Fl(Di\016cult)38 b(problem)656
4828 y Fi({)50 b Fl(Datapath)38 b(constrain)m(ts)656
5024 y Fi({)50 b Fl(Constrain)m(ts)36 b(of)j(custom)e(design)656
5220 y Fi({)50 b Fl(Problem)36 b(complexit)m(y)p 3510
5528 20 2396 v 331 5547 3198 20 v 3519 5587 50 2434 v
371 5587 3198 50 v 1930 5673 a Fk(2)p eop
%%Page: 2 2
2 1 bop 331 -168 3198 20 v 331 2228 20 2396 v 1179 -59
1462 4 v 1179 128 4 188 v 1213 70 a Fn(Structure)47 b(of)g(datapaths)p
2637 128 V 1179 132 1462 4 v 2639 172 42 196 v 1219 172
1462 42 v 524 762 a Fj(\017)j Fl(Highly)37 b(regular)g(la)m(y)m(out)f
(structures.)524 1332 y Fj(\017)50 b Fl(Flo)s(orplan:)656
1527 y Fi({)g Fl(Arra)m(y)37 b(of)i(bit)f(slices)656
1723 y Fi({)50 b Fl(W)-10 b(ords)39 b(of)g(iden)m(tical)d(bit)i(cells)g
(\(macrob)s(o)m(x\).)p 3510 2228 20 2396 v 331 2247 3198
20 v 3519 2287 50 2434 v 371 2287 3198 50 v 1930 2373
a Fk(3)p 331 3132 3198 20 v 331 5528 20 2396 v 1125 3242
1570 4 v 1125 3429 4 188 v 1159 3372 a Fn(Flo)t(orplan)47
b(of)g(a)g(Datapath)p 2691 3429 V 1125 3433 1570 4 v
2693 3473 42 196 v 1165 3473 1570 42 v 648 5362 a @beginspecial
0 @llx 0 @lly 597 @urx 419 @ury 2564 @rwi @setspecial
%%BeginDocument: floorplan.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: floorplan.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 04:50:17 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 597 419
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-80.0 441.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 8348 m -1000 -1000 l 12273 -1000 l 12273 8348 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1800 5700 m 2025 5700 l 2025 1050 l 1800 1050 l cp gs col0 s gr 
% Polyline
n 2550 5700 m 2775 5700 l 2775 1050 l 2550 1050 l cp gs col0 s gr 
% Polyline
n 3300 5700 m 3525 5700 l 3525 1050 l 3300 1050 l cp gs col0 s gr 
% Polyline
n 4050 5700 m 4275 5700 l 4275 1050 l 4050 1050 l cp gs col0 s gr 
% Polyline
n 6150 5700 m 6375 5700 l 6375 1050 l 6150 1050 l cp gs col0 s gr 
% Polyline
n 6900 5700 m 7125 5700 l 7125 1050 l 6900 1050 l cp gs col0 s gr 
% Polyline
n 7650 5700 m 7875 5700 l 7875 1050 l 7650 1050 l cp gs col0 s gr 
% Polyline
n 1350 5250 m 8400 5250 l 8400 5100 l 1350 5100 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 90.00 340.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1350 4650 m 8400 4650 l 8400 4500 l 1350 4500 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 90.00 300.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1350 1500 m 8400 1500 l 8400 1350 l 1350 1350 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 90.00 90.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1350 2025 m 8400 2025 l 8400 1875 l 1350 1875 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 90.00 125.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1350 2700 m 8400 2700 l 8400 2550 l 1350 2550 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 90.00 170.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1350 3150 m 8400 3150 l 8400 3000 l 1350 3000 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 90.00 200.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
6708 6765 m 6600 6825 l 6667 6721 l 6569 6813 l 6610 6857 l cp
clip
n 7725 5775 m 6600 6825 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 6708 6765 m 6600 6825 l 6667 6721 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
4698 6704 m 4725 6825 l 4645 6731 l 4705 6852 l 4759 6825 l cp
clip
n 4200 5775 m 4725 6825 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 4698 6704 m 4725 6825 l 4645 6731 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
4039 7036 m 4125 7125 l 4007 7087 l 4122 7158 l 4154 7107 l cp
clip
n 1950 5775 m 4125 7125 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 4039 7036 m 4125 7125 l 4007 7087 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
10214 3193 m 10275 3300 l 10170 3234 l 10264 3332 l 10307 3290 l cp
clip
n 8475 1425 m 10275 3300 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 10214 3193 m 10275 3300 l 10170 3234 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
9640 4107 m 9750 4050 l 9680 4152 l 9781 4063 l 9741 4018 l cp
clip
n 8475 5175 m 9750 4050 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 9640 4107 m 9750 4050 l 9680 4152 l  col0 s
% Polyline
n 3525 2550 m 4050 2550 l 4050 2025 l 3525 2025 l cp gs col7 0.75 shd ef gr gs col7 s gr 
% Polyline
15.000 slw
 [15 68] 68 sd
gs  clippath
5071 891 m 5175 825 l 5114 933 l 5217 824 l 5174 783 l cp
clip
n 3750 2325 m 5175 825 l gs col0 s gr gr
 [] 0 sd
% arrowhead
7.500 slw
n 5071 891 m 5175 825 l 5114 933 l  col0 s
/Times-Roman ff 540.00 scf sf
4200 7200 m
gs 1 -1 sc (power lines) col0 sh gr
/Times-Roman ff 540.00 scf sf
9750 3750 m
gs 1 -1 sc (control) col0 sh gr
/Times-Roman ff 540.00 scf sf
10050 4200 m
gs 1 -1 sc (lines) col0 sh gr
/Times-Roman ff 870.00 scf sf
4725 4275 m
gs 1 -1 sc (. . .) col0 sh gr
/Times-Roman ff 870.00 scf sf
5775 3825 m
gs 1 -1 sc (.) col0 sh gr
/Times-Roman ff 870.00 scf sf
5775 3375 m
gs 1 -1 sc (.) col0 sh gr
/Times-Roman ff 870.00 scf sf
5775 4275 m
gs 1 -1 sc (.) col0 sh gr
/Times-Roman ff 540.00 scf sf
5025 750 m
gs 1 -1 sc (Macrobox) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 3510 5528 20 2396 v 331 5547 3198 20 v 3519
5587 50 2434 v 371 5587 3198 50 v 1930 5673 a Fk(4)p
eop
%%Page: 3 3
3 2 bop 331 -168 3198 20 v 331 2228 20 2396 v 1222 -59
1376 4 v 1222 100 4 160 v 1256 70 a Fn(Inside)48 b(The)f(Macrob)t(o)l
(x)p 2594 100 V 1222 104 1376 4 v 2596 144 42 168 v 1262
144 1376 42 v 524 407 a Fj(\017)j Fl(P)m(o)m(w)m(er)37
b(supply)h(rails)524 613 y Fj(\017)50 b Fl(Bristles)656
798 y Fi({)g Fl(v)m(ertical)773 962 y(\(data)38 b(lines\))656
1148 y Fi({)50 b Fl(horizon)m(tal)773 1312 y(\(con)m(trol)36
b(lines\))524 1518 y Fj(\017)50 b Fl(Pitc)m(h)38 b(\(\014xed\))1612
1998 y @beginspecial 0 @llx 0 @lly 471 @urx 380 @ury
1874 @rwi @setspecial
%%BeginDocument: bit-slice.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: bit-slice.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 05:22:02 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 471 380
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-256.0 455.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def

% crosshatch30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<033003300c0c0c0c30033003c000c000300330030c0c0c0c
	0330033000c000c0033003300c0c0c0c30033003c000c000
	300330030c0c0c0c0330033000c000c0>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P3 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 8575 m -1000 -1000 l 13109 -1000 l 13109 8575 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 9375 2175 m 9675 2175 l 9675 4875 l 9375 4875 l cp gs col0 s gr 
% Polyline
n 7125 4075 m 7425 4075 l 7425 2175 l 7125 2175 l cp gs col0 s gr 
% Polyline
n 6375 2175 m 6675 2175 l 6675 3075 l 6375 3075 l cp gs col0 s gr 
% Polyline
n 5025 3675 m 10875 3675 l 10875 3375 l 5025 3375 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 335.00 225.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5025 4725 m 10875 4725 l 10875 4425 l 5025 4425 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 335.00 295.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
15.000 slw
 [15 60] 60 sd
n 10275 2475 m 10275 6075 l gs col15 0.00 shd ef gr gs col0 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 5550 2475 m 10200 2475 l gs col0 s gr  [] 0 sd
% Polyline
 [15 60] 60 sd
n 5625 6075 m 5625 2400 l gs col15 0.00 shd ef gr gs col0 s gr  [] 0 sd
% Polyline
7.500 slw
 [60] 0 sd
gs  clippath
6340 2043 m 6450 2100 l 6326 2102 l 6458 2133 l 6471 2074 l cp
clip
n 6450 2100 m 5175 1800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 345.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr gr
 [] 0 sd
% arrowhead
n 6340 2043 m 6450 2100 l 6326 2102 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
11003 3263 m 10950 3375 l 10944 3251 l 10918 3384 l 10976 3396 l cp
clip
n 11250 1875 m 10950 3375 l gs col7 0.75 shd ef gr gs col0 s gr gr
 [] 0 sd
% arrowhead
n 11003 3263 m 10950 3375 l 10944 3251 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
11069 4384 m 11025 4500 l 11009 4377 l 10993 4511 l 11053 4518 l cp
clip
n 11325 1950 m 11025 4500 l gs col7 0.75 shd ef gr gs col0 s gr gr
 [] 0 sd
% arrowhead
n 11069 4384 m 11025 4500 l 11009 4377 l  col0 s
% Polyline
n 5325 2475 m 5925 2475 l 5925 6525 l 5325 6525 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 355.00 165.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6375 6825 m 6675 6825 l 6675 4275 l 6375 4275 l cp gs col0 s gr 
% Polyline
n 7875 6825 m 8175 6825 l 8175 2175 l 7875 2175 l cp gs col0 s gr 
% Polyline
n 8625 6825 m 8925 6825 l 8925 2175 l 8625 2175 l cp gs col0 s gr 
% Polyline
n 9375 6825 m 9675 6825 l 9675 5325 l 9375 5325 l cp gs col0 s gr 
% Polyline
n 10050 2475 m 10575 2475 l 10575 6525 l 10050 6525 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 670.00 165.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
15.000 slw
 [15 45] 45 sd
n 5625 6525 m 10275 6525 l gs col0 s gr  [] 0 sd
% Polyline
7.500 slw
 [68 34 15 34] 0 sd
gs  clippath
10105 7088 m 10224 7125 l 10105 7163 l 10290 7163 l 10290 7088 l cp
5795 7163 m 5675 7125 l 5795 7088 l 5610 7088 l 5610 7163 l cp
clip
n 5625 7125 m 10275 7125 l gs col15 0.00 shd ef gr gs col0 s gr gr
 [] 0 sd
% arrowhead
30.000 slw
n 5795 7163 m 5675 7125 l 5795 7088 l  col0 s
% arrowhead
n 10105 7088 m 10224 7125 l 10105 7163 l  col0 s
/Times-Bold ff 240.00 scf sf
5400 2400 m
gs 1 -1 sc (VSS) col0 sh gr
/Times-Bold ff 240.00 scf sf
10050 2400 m
gs 1 -1 sc (VDD) col0 sh gr
/Times-Roman ff 240.00 scf sf
4575 1425 m
gs 1 -1 sc (Data lines) col0 sh gr
/Times-Roman ff 240.00 scf sf
4275 1725 m
gs 1 -1 sc (\(vertical bristles\)) col0 sh gr
/Times-Roman ff 240.00 scf sf
10125 1725 m
gs 1 -1 sc (\(horizontal bristles\)) col0 sh gr
/Times-Roman ff 240.00 scf sf
10350 1425 m
gs 1 -1 sc (Control lines) col0 sh gr
/Times-Roman ff 240.00 scf sf
7200 7500 m
gs 1 -1 sc (PITCH \(fixed\),) col0 sh gr
/Times-Roman ff 330.00 scf sf
8850 7500 m
gs 1 -1 sc (X) col0 sh gr
/Times-Roman ff 240.00 scf sf
9150 7575 m
gs 1 -1 sc (0) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 3510 2228 20 2396 v 331 2247 3198 20 v 3519
2287 50 2434 v 371 2287 3198 50 v 1930 2373 a Fk(5)p
331 3132 3198 20 v 331 5528 20 2396 v 1291 3241 1239
4 v 1291 3400 4 160 v 1325 3370 a Fn(Problem)47 b(De\014nition)p
2525 3400 V 1291 3404 1239 4 v 2527 3444 42 168 v 1331
3444 1239 42 v 524 3752 a Fj(\017)j Fl(Generate)38 b(macrob)s(o)m(x)d
(la)m(y)m(out)524 3958 y Fj(\017)50 b Fl(Comp)s(onen)m(ts:)686
4123 y(Rectangular)36 b(ob)7 b(jects)2258 5252 y @beginspecial
0 @llx 0 @lly 292 @urx 453 @ury 928 @rwi @setspecial
%%BeginDocument: sample.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: sample.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 05:32:01 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 292 453
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-223.0 483.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 9047 m -1000 -1000 l 9572 -1000 l 9572 9047 l cp clip
 0.06000 0.06000 sc
% Polyline
15.000 slw
n 8550 8025 m 8550 525 l 3750 525 l 3750 8025 l cp gs col0 s gr 
% Polyline
7.500 slw
 [60] 0 sd
n 8400 7875 m 8400 6975 l 6150 6975 l 6150 7875 l cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 8400 6675 m 8400 5475 l 6150 5475 l 6150 6675 l cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 8325 4875 m 8325 675 l 5400 675 l 5400 4875 l cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6000 7875 m 6000 5475 l 4950 5475 l 4950 7875 l cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4800 7875 m 4800 4125 l 3900 4125 l 3900 7875 l cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5025 1575 m 5025 750 l 3900 750 l 3900 1575 l cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5025 3675 m 5025 2475 l 3900 2475 l 3900 3675 l cp gs col0 s gr  [] 0 sd
$F2psEnd
rs

%%EndDocument
 @endspecial 3510 5528 20 2396 v 331 5547 3198 20 v 3519
5587 50 2434 v 371 5587 3198 50 v 1930 5673 a Fk(6)p
eop
%%Page: 4 4
4 3 bop 331 -168 3198 20 v 331 2228 20 2396 v 1388 -59
1045 4 v 1388 126 4 186 v 1422 68 a Fn(Comp)t(onen)l(ts)48
b(-)f(1)p 2428 126 V 1388 130 1045 4 v 2430 170 42 194
v 1428 170 1045 42 v 524 451 a Fj(\017)j Fl(Single)38
b(transistor,)d(c)m(hain)j(of)h(transistors)524 678 y
Fj(\017)50 b Fl(In)m(v)m(erters,)37 b(logic)g(gates)1055
2032 y @beginspecial 0 @llx 0 @lly 439 @urx 307 @ury
1750 @rwi @setspecial
%%BeginDocument: components.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: components.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Mon Oct  4 06:24:57 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 439 307
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-139.0 378.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<808080804040404020202020101010100808080804040404
	020202020101010180808080404040402020202010101010
	080808080404040402020202010101018080808040404040
	202020201010101008080808040404040202020201010101
	808080804040404020202020101010100808080804040404
	0202020201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

% vertical lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 8 16 true [ 8 0 0 -16 0 16 ]
	{<11111111111111111111111111111111>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P10 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7300 m -1000 -1000 l 10628 -1000 l 10628 7300 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 2400 5400 m 3600 5400 l 3600 3450 l 2400 3450 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 230.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2850 5850 m 3150 5850 l 3150 3000 l 2850 3000 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 190.00 200.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4500 5400 m 7500 5400 l 7500 3450 l 4500 3450 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 300.00 230.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6750 5850 m 7050 5850 l 7050 3000 l 6750 3000 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 450.00 200.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4950 5850 m 5250 5850 l 5250 3000 l 4950 3000 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 330.00 200.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5850 5850 m 6150 5850 l 6150 3000 l 5850 3000 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 390.00 200.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 8400 5400 m 9600 5400 l 9600 4350 l 8400 4350 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 560.00 290.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 8400 3600 m 9600 3600 l 9600 1650 l 8400 1650 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 560.00 110.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 8850 5850 m 9150 5850 l 9150 1200 l 8850 1200 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 590.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
/Times-Roman ff 360.00 scf sf
2325 6300 m
gs 1 -1 sc (transistor) col0 sh gr
/Times-Roman ff 360.00 scf sf
4575 6300 m
gs 1 -1 sc (chain of transistors) col0 sh gr
/Times-Roman ff 360.00 scf sf
8475 6300 m
gs 1 -1 sc (inverter) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 3510 2228 20 2396 v 331 2247 3198 20 v 3519
2287 50 2434 v 371 2287 3198 50 v 1930 2373 a Fk(7)p
331 3132 3198 20 v 331 5528 20 2396 v 1388 3241 1045
4 v 1388 3426 4 186 v 1422 3368 a Fn(Comp)t(onen)l(ts)48
b(-)f(2)p 2428 3426 V 1388 3430 1045 4 v 2430 3470 42
194 v 1428 3470 1045 42 v 524 3699 a Fj(\017)j Fl(Rectangular)524
3911 y Fj(\017)g Fl(L-shap)s(e)524 4123 y Fj(\017)g Fl(T-shap)s(e.)733
5379 y @beginspecial 0 @llx 0 @lly 668 @urx 241 @ury
2394 @rwi @setspecial
%%BeginDocument: compshape.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: compshape.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 05:38:10 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 668 241
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-98.0 438.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def

% vertical lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 8 16 true [ 8 0 0 -16 0 16 ]
	{<11111111111111111111111111111111>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P10 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /endash 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 8299 m -1000 -1000 l 13762 -1000 l 13762 8299 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1650 6150 m 4650 6150 l 4650 3750 l 1650 3750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 110.00 250.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 6600 m 2400 6600 l 2400 3300 l 2100 3300 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 140.00 220.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3000 6600 m 3300 6600 l 3300 3300 l 3000 3300 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 200.00 220.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3900 6600 m 4200 6600 l 4200 3300 l 3900 3300 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 260.00 220.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5700 6150 m 5700 4650 l 7350 4650 l 7350 3750 l 8700 3750 l 8700 6225 l
 8700 6150 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 380.00 250.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6150 6600 m 6450 6600 l 6450 4200 l 6150 4200 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 410.00 280.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7050 6600 m 7350 6600 l 7350 3300 l 7050 3300 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 470.00 220.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7950 6600 m 8250 6600 l 8250 3300 l 7950 3300 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 530.00 220.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 9750 6150 m 9750 4650 l 10500 4650 l 10500 3750 l 12000 3750 l 12000 4650 l
 12750 4650 l 12750 6225 l 12750 6150 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 650.00 250.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 11100 6600 m 11400 6600 l 11400 3300 l 11100 3300 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 740.00 220.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 10200 6600 m 10500 6600 l 10500 4200 l 10200 4200 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 680.00 280.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 12000 6600 m 12300 6600 l 12300 4200 l 12000 4200 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 800.00 280.00] PATmp PATsp ef gr PATusp gs col0 s gr 
/Times-Roman-iso ff 360.00 scf sf
6675 7200 m
gs 1 -1 sc (L-shape) col0 sh gr
/Times-Roman-iso ff 360.00 scf sf
10650 7200 m
gs 1 -1 sc (T-shape) col0 sh gr
/Times-Roman-iso ff 360.00 scf sf
2250 7200 m
gs 1 -1 sc (Rectangular) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 3510 5528 20 2396 v 331 5547 3198 20 v 3519
5587 50 2434 v 371 5587 3198 50 v 1930 5673 a Fk(8)p
eop
%%Page: 5 5
5 4 bop 331 -168 3198 20 v 331 2228 20 2396 v 966 -59
1888 4 v 966 128 4 188 v 1000 70 a Fn(Metho)t(d)47 b(for)f(Macrob)t(o)l
(x)i(La)l(y)l(out)p 2850 128 V 966 132 1888 4 v 2852
172 42 196 v 1006 172 1888 42 v 493 443 a Fl(1.)h(Initial)37
b(Relativ)m(e)g(Placemen)m(t)664 639 y Fj(\017)49 b Fl(connectivit)m(y)
664 835 y Fj(\017)g Fl(no)39 b(geometrical)34 b(information)493
1062 y(2.)49 b(Geometric)36 b(Placemen)m(t)664 1258 y
Fj(\017)49 b Fl(\014xed)39 b(connectivit)m(y)664 1454
y Fj(\017)49 b Fl(geometrical)35 b(information)493 1681
y(3.)49 b(P)m(ost-pro)s(cessing)664 1877 y Fj(\017)g
Fl(compaction)664 2073 y Fj(\017)g Fl(\014nal)39 b(orien)m(tation)p
3510 2228 20 2396 v 331 2247 3198 20 v 3519 2287 50 2434
v 371 2287 3198 50 v 1930 2373 a Fk(9)p 331 3132 3198
20 v 331 5528 20 2396 v 1074 3241 1672 4 v 1074 3400
4 160 v 1108 3370 a Fn(Initial)47 b(Relativ)l(e)h(Placemen)l(t)p
2742 3400 V 1074 3404 1672 4 v 2744 3444 42 168 v 1114
3444 1672 42 v 455 3954 a Fi(GO)l(AL:)524 4181 y Fj(\017)i
Fl(T)-10 b(o)38 b(obtain)g(a)g(relativ)m(e)e(initial)g(placemen)m(t)h
(to)h(simplify)634 4346 y(geometric)d(placemen)m(t.)455
4863 y Fi(METHOD:)524 5090 y Fj(\017)50 b Fl(F)-10 b(orce)39
b(directed)f(tec)m(hnique)p 3510 5528 20 2396 v 331 5547
3198 20 v 3519 5587 50 2434 v 371 5587 3198 50 v 1910
5673 a Fk(10)p eop
%%Page: 6 6
6 5 bop 331 -168 3198 20 v 331 2228 20 2396 v 980 -59
1861 4 v 980 100 4 160 v 1014 70 a Fn(F)-12 b(orce)47
b(Directed)h(Placemen)l(t)g(-)e(1)p 2836 100 V 980 104
1861 4 v 2838 144 42 168 v 1020 144 1861 42 v 524 481
a Fj(\017)k Fl(Based)39 b(on)f(analogy)f(to)h(classical)f(mec)m(hanics)
g(problem)f(of)i(a)634 645 y(system)f(of)i(b)s(o)s(dies.)524
873 y Fj(\017)50 b Fl(The)39 b(comp)s(onen)m(ts)d(sharing)h(the)i(same)
e(net)i(excersize)f(forces)634 1037 y(on)h(eac)m(h)f(other.)1695
1243 y(Ho)s(ok)m(e's)f(La)m(w)1628 1407 y Fh(F)1704 1425
y Fg(ij)1810 1407 y Fl(=)c Fh(k)1995 1425 y Fg(ij)2094
1407 y Fj(\003)26 b Fl(\001)p Fh(d)2339 1425 y Fg(ij)1255
1592 y Fl(where)38 b(\001)p Fh(d)1752 1610 y Fg(ij)1858
1592 y Fl(=)1982 1468 y Ff(q)p 2081 1468 703 4 v 2081
1592 a Fl(\001)p Fh(x)2246 1610 y Fg(ij)2318 1542 y Fe(2)2392
1592 y Fl(+)27 b(\001)p Fh(y)2665 1610 y Fg(ij)2737 1542
y Fe(2)524 1819 y Fj(\017)50 b Fl(The)39 b(\014nal)f(placemen)m(t)e(is)
j(when)f(all)g(comp)s(onen)m(ts)e(are)i(at)634 1984 y(equilibrium.)p
3510 2228 20 2396 v 331 2247 3198 20 v 3519 2287 50 2434
v 371 2287 3198 50 v 1910 2373 a Fk(11)p 331 3132 3198
20 v 331 5528 20 2396 v 980 3241 1861 4 v 980 3400 4
160 v 1014 3370 a Fn(F)-12 b(orce)47 b(Directed)h(Placemen)l(t)g(-)e(2)
p 2836 3400 V 980 3404 1861 4 v 2838 3444 42 168 v 1020
3444 1861 42 v 1324 4014 a @beginspecial 0 @llx 0 @lly
299 @urx 71 @ury 1212 @rwi @setspecial
%%BeginDocument: forces.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: forces.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 05:57:26 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 299 71
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-134.0 217.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 4612 m -1000 -1000 l 8208 -1000 l 8208 4612 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Ellipse
n 2700 3150 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6750 3150 450 450 0 360 DrawEllipse gs col0 s gr

% Polyline
n 3825 2700 m 4050 3150 l 4275 3600 l gs col0 s gr 
% Polyline
n 4275 3600 m 4500 3150 l 4725 2700 l gs col0 s gr 
% Polyline
n 4725 2700 m 4950 3150 l 5175 3600 l gs col0 s gr 
% Polyline
n 5175 3600 m 5400 3150 l 5625 2700 l gs col0 s gr 
% Polyline
n 5625 2700 m 5850 3150 l gs col0 s gr 
% Polyline
n 3821 2700 m 3829 2700 l gs col0 s gr
% Polyline
n 3600 3150 m 3825 2775 l gs col0 s gr 
% Polyline
gs  clippath
3480 3120 m 3600 3150 l 3480 3180 l 3615 3180 l 3615 3120 l cp
clip
n 3150 3150 m 3600 3150 l gs col0 s gr gr

% arrowhead
n 3480 3120 m 3600 3150 l 3480 3180 l  col0 s
% Polyline
gs  clippath
5970 3180 m 5850 3150 l 5970 3120 l 5835 3120 l 5835 3180 l cp
clip
n 5850 3150 m 6300 3150 l gs col0 s gr gr

% arrowhead
n 5970 3180 m 5850 3150 l 5970 3120 l  col0 s
/Times-Roman ff 360.00 scf sf
2625 3225 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 360.00 scf sf
6750 3225 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 360.00 scf sf
3375 2850 m
gs 1 -1 sc (F) col0 sh gr
/Times-Roman ff 240.00 scf sf
3600 2625 m
gs 1 -1 sc (ij) col0 sh gr
/Times-Roman ff 240.00 scf sf
6150 2625 m
gs 1 -1 sc (ji) col0 sh gr
/Times-Roman ff 360.00 scf sf
5925 2850 m
gs 1 -1 sc (F) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 994 4258 a Fh(~)950 4294 y(F)1042 4260 y
Fg(ij)1154 4294 y Fl(,)38 b(attractiv)m(e)d(force)j(applied)g(on)h
Fh(i)g Fl(b)m(y)f Fh(j)1527 4459 y(F)1619 4415 y Fg(ij)1603
4488 y(x)1725 4459 y Fl(=)c Fh(k)1911 4477 y Fg(ij)2010
4459 y Fj(\003)26 b Fl(\001)p Fh(x)2261 4477 y Fg(ij)1532
4623 y Fh(F)1624 4580 y Fg(ij)1608 4653 y(y)1730 4623
y Fl(=)33 b Fh(k)1915 4641 y Fg(ij)2014 4623 y Fj(\003)27
b Fl(\001)p Fh(y)2256 4641 y Fg(ij)502 5022 y Fl(where)38
b Fh(k)901 5040 y Fg(ij)1013 5022 y Fl(is)g(the)h(prop)s(ortionalit)m
(y)34 b(constan)m(t)j(\(connectivit)m(y\),)1060 5186
y(\001)p Fh(x)1225 5204 y Fg(ij)1330 5186 y Fl(=)c Fh(x)1521
5204 y Fg(j)1591 5186 y Fj(\000)27 b Fh(x)1778 5204 y
Fg(i)1850 5186 y Fl(and)39 b(\001)p Fh(y)2233 5204 y
Fg(ij)2338 5186 y Fl(=)33 b Fh(y)2519 5204 y Fg(j)2590
5186 y Fj(\000)26 b Fh(y)2766 5204 y Fg(i)p 3510 5528
20 2396 v 331 5547 3198 20 v 3519 5587 50 2434 v 371
5587 3198 50 v 1910 5673 a Fk(12)p eop
%%Page: 7 7
7 6 bop 331 -168 3198 20 v 331 2228 20 2396 v 980 -59
1861 4 v 980 100 4 160 v 1014 70 a Fn(F)-12 b(orce)47
b(Directed)h(Placemen)l(t)g(-)e(3)p 2836 100 V 980 104
1861 4 v 2838 144 42 168 v 1020 144 1861 42 v 455 347
a Fi(A)l(t)f(Equilibrium:)53 b Fl(The)39 b(net)f(force)g(acting)f(on)i
(eac)m(h)455 506 y(comp)s(onen)m(t)d Fj(\))d Fl(0)1423
1520 y @beginspecial 0 @llx 0 @lly 285 @urx 263 @ury
1014 @rwi @setspecial
%%BeginDocument: forces2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: forces2.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Mon Oct  4 11:46:13 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 285 263
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-134.0 424.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 8057 m -1000 -1000 l 7983 -1000 l 7983 8057 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Ellipse
n 2700 3150 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6525 3150 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4500 4650 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4500 6600 450 450 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
3480 3870 m 3600 3900 l 3480 3930 l 3615 3930 l 3615 3870 l cp
clip
n 4125 4425 m 3525 3900 l 3600 3900 l gs col0 s gr gr

% arrowhead
n 3480 3870 m 3600 3900 l 3480 3930 l  col0 s
% Polyline
gs  clippath
5440 3956 m 5550 3900 l 5479 4002 l 5581 3913 l 5542 3868 l cp
clip
n 4950 4425 m 5550 3900 l gs col0 s gr gr

% arrowhead
n 5440 3956 m 5550 3900 l 5479 4002 l  col0 s
% Polyline
gs  clippath
4530 5580 m 4500 5700 l 4470 5580 l 4470 5715 l 4530 5715 l cp
clip
n 4500 5100 m 4500 5700 l gs col0 s gr gr

% arrowhead
n 4530 5580 m 4500 5700 l 4470 5580 l  col0 s
% Polyline
 [60] 0 sd
n 3000 3450 m 4125 4425 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4950 4425 m 6075 3450 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4500 5100 m 4500 6150 l gs col0 s gr  [] 0 sd
/Times-Roman ff 360.00 scf sf
6525 3225 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 360.00 scf sf
4425 4800 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 360.00 scf sf
2625 3225 m
gs 1 -1 sc (k) col0 sh gr
/Times-Roman ff 360.00 scf sf
4425 6750 m
gs 1 -1 sc (l) col0 sh gr
/Times-Roman ff 360.00 scf sf
4950 4050 m
gs 1 -1 sc (F) col0 sh gr
/Times-Roman ff 360.00 scf sf
3675 3825 m
gs 1 -1 sc (F) col0 sh gr
/Times-Roman ff 360.00 scf sf
4650 5775 m
gs 1 -1 sc (F) col0 sh gr
/Times-Roman ff 240.00 scf sf
5175 3750 m
gs 1 -1 sc (ij) col0 sh gr
/Times-Roman ff 240.00 scf sf
3900 3600 m
gs 1 -1 sc (ik) col0 sh gr
/Times-Roman ff 240.00 scf sf
4875 5550 m
gs 1 -1 sc (il) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 1285 1762 a Fj(8)p Fh(i;)1702 1727 y(~)1678
1762 y(F)1770 1728 y Fg(i)1837 1762 y Fl(=)1987 1727
y Fh(~)1961 1762 y(F)2053 1728 y Fg(i)2037 1792 y(x)2116
1762 y Fl(+)2258 1727 y Fh(~)2234 1762 y(F)2326 1728
y Fg(i)2310 1792 y(y)2393 1762 y Fl(=)g(0)1276 1922 y
Fh(F)1368 1879 y Fg(i)1352 1952 y(x)1438 1922 y Fl(=)1562
1842 y Ff(P)1667 1874 y Fg(n)1667 1952 y(j)5 b Fe(=1)1820
1922 y Fl([)p Fh(k)1914 1940 y Fg(ij)2012 1922 y Fj(\003)26
b Fl(\001)p Fh(x)2263 1940 y Fg(ij)2335 1922 y Fl(])33
b(=)g(0)1282 2082 y Fh(F)1374 2039 y Fg(i)1358 2112 y(y)1441
2082 y Fl(=)1566 2002 y Ff(P)1671 2034 y Fg(n)1671 2112
y(j)5 b Fe(=1)1823 2082 y Fl([)p Fh(k)1917 2100 y Fg(ij)2016
2082 y Fj(\003)26 b Fl(\001)p Fh(y)2257 2100 y Fg(ij)2329
2082 y Fl(])33 b(=)g(0)p 3510 2228 20 2396 v 331 2247
3198 20 v 3519 2287 50 2434 v 371 2287 3198 50 v 1910
2373 a Fk(13)p 331 3132 3198 20 v 331 5528 20 2396 v
980 3241 1861 4 v 980 3400 4 160 v 1014 3370 a Fn(F)-12
b(orce)47 b(Directed)h(Placemen)l(t)g(-)e(4)p 2836 3400
V 980 3404 1861 4 v 2838 3444 42 168 v 1020 3444 1861
42 v 1350 3632 a Fd(F)1428 3596 y Fc(i)1414 3657 y(x)1492
3632 y Fb(=)1597 3558 y Ff(P)1703 3582 y Fc(n)1703 3662
y(j)t Fk(=1)1845 3632 y Fb([)p Fd(k)1925 3647 y Fc(ij)2017
3632 y Fa(\003)22 b Fb(\001)p Fd(x)2229 3647 y Fc(ij)2299
3632 y Fb(])28 b(=)g(0)690 3769 y Fd(k)742 3784 y Fc(i)p
Fk(1)837 3769 y Fa(\003)22 b Fb(\()p Fd(x)1005 3784 y
Fk(1)1072 3769 y Fa(\000)g Fd(x)1228 3784 y Fc(i)1261
3769 y Fb(\))g(+)h Fd(k)1474 3784 y Fc(i)p Fk(2)1569
3769 y Fa(\003)f Fb(\()p Fd(x)1737 3784 y Fk(2)1803 3769
y Fa(\000)h Fd(x)1960 3784 y Fc(i)1993 3769 y Fb(\))f(+)g
Fd(:::)g Fb(+)g Fd(k)2410 3784 y Fc(in)2515 3769 y Fa(\003)g
Fb(\()p Fd(x)2683 3784 y Fc(n)2759 3769 y Fa(\000)g Fd(x)2915
3784 y Fc(i)2948 3769 y Fb(\))28 b(=)g(0)1269 3832 y
Ff(P)1374 3856 y Fc(n)1374 3936 y(j)t Fk(=1)1517 3906
y Fb([)p Fd(k)1597 3921 y Fc(ij)1689 3906 y Fa(\003)22
b Fd(x)1818 3921 y Fc(j)1860 3906 y Fb(])27 b(=)2020
3832 y Ff(P)2125 3856 y Fc(n)2125 3936 y(j)t Fk(=1)2285
3906 y Fd(k)2337 3921 y Fc(ij)2429 3906 y Fa(\003)22
b Fd(x)2558 3921 y Fc(i)1549 4333 y Fd(x)1606 4348 y
Fc(i)1667 4333 y Fb(=)1832 4036 y Fc(n)1784 4066 y Ff(X)1787
4278 y Fc(j)t Fk(=1)1928 4161 y Fb([)p Fd(k)2008 4176
y Fc(ij)2100 4161 y Fa(\003)g Fd(x)2229 4176 y Fc(j)2271
4161 y Fb(])p 1784 4310 515 4 v 1948 4354 a Fc(n)1900
4384 y Ff(X)1903 4596 y Fc(j)t Fk(=1)2061 4478 y Fd(k)2113
4493 y Fc(ij)455 4744 y Fb(Same)32 b(for)i(y)f(direction)1558
5154 y Fd(y)1607 5169 y Fc(i)1667 5154 y Fb(=)1832 4858
y Fc(n)1784 4888 y Ff(X)1787 5100 y Fc(j)t Fk(=1)1928
4982 y Fb([)p Fd(k)2008 4997 y Fc(ij)2100 4982 y Fa(\003)22
b Fd(y)2221 4997 y Fc(j)2263 4982 y Fb(])p 1784 5131
507 4 v 1944 5175 a Fc(n)1896 5205 y Ff(X)1899 5418 y
Fc(j)t Fk(=1)2057 5300 y Fd(k)2109 5315 y Fc(ij)p 3510
5528 20 2396 v 331 5547 3198 20 v 3519 5587 50 2434 v
371 5587 3198 50 v 1910 5673 a Fk(14)p eop
%%Page: 8 8
8 7 bop 331 -168 3198 20 v 331 2228 20 2396 v 980 -59
1861 4 v 980 100 4 160 v 1014 70 a Fn(F)-12 b(orce)47
b(Directed)h(Placemen)l(t)g(-)e(5)p 2836 100 V 980 104
1861 4 v 2838 144 42 168 v 1020 144 1861 42 v 524 714
a Fj(\017)k Fl(The)39 b(a)m(v)m(oid)e(trivial)e(solution)1568
919 y Fh(x)1635 937 y Fg(i)1702 919 y Fl(=)e Fh(x)1893
937 y Fg(j)1969 919 y Fl(=)h Fh(:::)d Fl(=)j Fh(x)2416
937 y Fg(n)634 1125 y Fl(the)39 b(lo)s(cation)d(of)i(some)g(comp)s
(onen)m(ts)e(m)m(ust)h(b)s(e)j(\014xed.)524 1352 y Fj(\017)50
b Fl(Fixed)39 b(comp)s(onen)m(ts)d(are)i(kno)m(wn)g(as)h
Fi(anc)l(hors)p Fl(.)524 1580 y Fj(\017)50 b Fl(Anc)m(hor)38
b(assignmen)m(t)e(is)i(done)h(based)g(on)f(connectivit)m(y)634
1744 y(information.)47 b(\(heuristic\))p 3510 2228 20
2396 v 331 2247 3198 20 v 3519 2287 50 2434 v 371 2287
3198 50 v 1910 2373 a Fk(15)p 331 3132 3198 20 v 331
5528 20 2396 v 762 3241 2297 4 v 762 3400 4 160 v 796
3370 a Fn(Result)h(of)e(F)-12 b(orce)48 b(Directed)g(Placemen)l(t)p
3054 3400 V 762 3404 2297 4 v 3056 3444 42 168 v 802
3444 2297 42 v 524 3851 a Fj(\017)i Fl(Initial)37 b(relativ)m(e)f
(placemen)m(t)g(of)i(comp)s(onen)m(ts)1367 5205 y @beginspecial
0 @llx 0 @lly 265 @urx 288 @ury 1126 @rwi @setspecial
%%BeginDocument: irpgraph.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: irpgraph.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Mon Oct  4 12:49:23 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 265 288
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-27.0 342.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 6692 m -1000 -1000 l 5861 -1000 l 5861 6692 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 3105 3300 m 3255 3300 l 3255 5400 l 3105 5400 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 207.00 220.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 3705 1575 m 4005 1575 l 4005 5175 l 3705 5175 l cp gs col7 0.75 shd ef gr gs col-1 s gr 
% Polyline
n 705 1575 m 1005 1575 l 1005 5175 l 705 5175 l cp gs col7 0.75 shd ef gr gs col-1 s gr 
% Polyline
n 1455 1200 m 1605 1200 l 1605 3000 l 1455 3000 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 97.00 80.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 525 2250 m 4275 2250 l 4275 2400 l 525 2400 l cp gs col7 0.50 shd ef gr gs col0 s gr 
% Ellipse
n 1155 1725 106 106 0 360 DrawEllipse gs col7 0.55 shd ef gr gs col-1 s gr

% Ellipse
n 3555 1725 106 106 0 360 DrawEllipse gs col7 0.55 shd ef gr gs col-1 s gr

% Ellipse
n 3555 5025 106 106 0 360 DrawEllipse gs col7 0.55 shd ef gr gs col-1 s gr

% Ellipse
n 1155 5025 106 106 0 360 DrawEllipse gs col7 0.55 shd ef gr gs col-1 s gr

% Ellipse
n 2205 4200 75 75 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 2580 4500 75 75 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 2580 3600 75 75 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 2205 3150 75 75 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 2430 2100 75 75 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 1830 2925 75 75 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 1400 4435 75 75 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 2845 2780 75 75 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 3172 3367 49 49 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 3175 3587 49 49 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 1537 2887 49 49 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 3037 2325 49 49 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 2440 2327 49 49 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Polyline
n 1005 5175 m 3705 5175 l gs col7 0.85 shd ef gr gs col-1 s gr 
% Polyline
 [60] 0 sd
n 1005 1575 m 3705 1575 l gs col7 0.85 shd ef gr gs col-1 s gr  [] 0 sd
% Polyline
n 2660 4535 m 3470 4945 l 3480 4935 l gs col-1 s gr 
% Polyline
n 1160 1825 m 1400 4365 l 1400 4355 l gs col-1 s gr 
% Polyline
n 1480 4415 m 2130 4225 l gs col-1 s gr 
% Polyline
n 2550 3665 m 2250 4135 l gs col-1 s gr 
% Polyline
n 2270 4255 m 2520 4445 l gs col-1 s gr 
% Polyline
n 1890 2955 m 2160 3105 l gs col-1 s gr 
% Polyline
n 2270 3215 m 2540 3515 l gs col-1 s gr 
% Polyline
n 2890 2845 m 3110 3295 l gs col-1 s gr 
% Polyline
n 1010 4425 m 1330 4415 l gs col-1 s gr 
% Polyline
n 1870 2855 m 2400 2155 l gs col-1 s gr 
% Polyline
n 1260 1755 m 2370 2065 l gs col-1 s gr 
% Polyline
n 2490 2065 m 3450 1735 l gs col-1 s gr 
% Polyline
n 2480 2135 m 2800 2715 l gs col-1 s gr 
% Polyline
n 2190 3225 m 1250 4985 l gs col-1 s gr 
% Polyline
n 1360 4505 m 1210 4945 l gs col-1 s gr 
% Polyline
n 2850 2870 m 2610 4440 l gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 2660 3585 m 3170 3585 l 3170 3565 l gs col-1 s gr 
% Polyline
n 1540 2905 m 1780 2895 l gs col-1 s gr 
% Polyline
n 3015 2377 m 2872 2715 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 3067 2295 m 3487 1807 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2445 2370 m 2235 3082 l gs col7 0.00 shd ef gr gs col0 s gr 
/Times-Roman ff 180.00 scf sf
1425 1050 m
gs 1 -1 sc (N1) col0 sh gr
/Times-Roman ff 180.00 scf sf
450 5550 m
gs 1 -1 sc (VDD) col-1 sh gr
/Times-Roman ff 180.00 scf sf
3825 5550 m
gs 1 -1 sc (VSS) col-1 sh gr
/Times-Roman ff 180.00 scf sf
4462 2400 m
gs 1 -1 sc (WE1) col0 sh gr
/Times-Roman ff 180.00 scf sf
3097 5692 m
gs 1 -1 sc (S2) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 3510 5528 20 2396 v 331 5547 3198 20 v 3519
5587 50 2434 v 371 5587 3198 50 v 1910 5673 a Fk(16)p
eop
%%Page: 9 9
9 8 bop 331 -168 3198 20 v 331 2228 20 2396 v 1217 -59
1386 4 v 1217 100 4 160 v 1251 70 a Fn(Geometric)48 b(Placemen)l(t)p
2599 100 V 1217 104 1386 4 v 2601 144 42 168 v 1257 144
1386 42 v 455 347 a Fi(Ob)7 b(jectiv)l(e:)54 b Fl(T)-10
b(o)38 b(minimize)d(the)j(heigh)m(t)g(of)g(the)h(placemen)m(t,)c
Fh(Y)3328 364 y Fe(0)524 561 y Fj(\017)50 b Fl(It)39
b(concen)m(trates)e(on)h(the)h(non-o)m(v)m(erlapping)c(placemen)m(t)524
769 y Fj(\017)50 b Fl(It)39 b(tak)m(es)f(in)m(to)f(consideration)f(of)i
(geometrical)d(information)634 929 y(and)k(relativ)m(e)d(p)s(ositions)h
(of)h(comp)s(onen)m(ts)524 1137 y Fj(\017)50 b Fl(F)-10
b(orm)m(ulation)35 b(includes)656 1321 y Fi({)50 b Fl(Comp)s(onen)m(t)
36 b(mo)s(deling)656 1505 y Fi({)50 b Fl(Comp)s(onen)m(t)36
b(rotation)656 1689 y Fi({)50 b Fl(Non-o)m(v)m(erlapping)35
b(constrain)m(ts)656 1873 y Fi({)50 b Fl(Boundary)38
b(constrain)m(ts)e(\(\014xed)j(pitc)m(h\))524 2081 y
Fj(\017)50 b Fl(MILP)39 b(is)g(used)g(to)f(solv)m(e)g(this)g(problem)p
3510 2228 20 2396 v 331 2247 3198 20 v 3519 2287 50 2434
v 371 2287 3198 50 v 1910 2373 a Fk(17)p 331 3132 3198
20 v 331 5528 20 2396 v 1000 3241 1821 4 v 1000 3428
4 188 v 1034 3370 a Fn(Mo)t(deling)47 b(of)g(Comp)t(onen)l(ts)i(-)d(1)p
2816 3428 V 1000 3432 1821 4 v 2818 3472 42 196 v 1040
3472 1821 42 v 524 3695 a Fj(\017)k Fl(Eac)m(h)38 b(rectangular)e(comp)
s(onen)m(t)g(is)j(represen)m(ted)f(b)m(y)g(the)634 3855
y(co)s(ordinates)f(of)h(their)g(upp)s(ermost)e(corner,)i(\()p
Fh(X)2785 3873 y Fg(i)2818 3855 y Fh(;)20 b(Y)2939 3873
y Fg(i)2972 3855 y Fl(\))524 4063 y Fj(\017)50 b Fl(T-shap)s(e)39
b(and)f(L-shap)s(e)h(comp)s(onen)m(ts)e(can)i(b)s(e)g(represen)m(ted)
634 4223 y(as)g(connected)f(rectangles.)1318 5439 y @beginspecial
0 @llx 0 @lly 396 @urx 362 @ury 1224 @rwi @setspecial
%%BeginDocument: model.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: model.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 06:18:08 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 396 362
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-94.0 383.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% crosshatch30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<033003300c0c0c0c30033003c000c000300330030c0c0c0c
	0330033000c000c0033003300c0c0c0c30033003c000c000
	300330030c0c0c0c0330033000c000c0>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P3 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7367 m -1000 -1000 l 9161 -1000 l 9161 7367 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 2325 5100 m 3525 5100 l 3525 1500 l 2325 1500 l cp gs col0 s gr 
% Polyline
n 2775 5400 m 3075 5400 l 3075 1200 l 2775 1200 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 185.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
 [15 45] 45 sd
gs  clippath
1920 1320 m 1950 1200 l 1980 1320 l 1980 1185 l 1920 1185 l cp
1980 5280 m 1950 5400 l 1920 5280 l 1920 5415 l 1980 5415 l cp
clip
n 1950 5400 m 1950 1200 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 1980 5280 m 1950 5400 l 1920 5280 l  col0 s
% arrowhead
n 1920 1320 m 1950 1200 l 1980 1320 l  col0 s
% Polyline
 [60] 0 sd
n 2325 5400 m 3525 5400 l 3525 1200 l 2325 1200 l cp gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
3706 1061 m 3600 1125 l 3664 1019 l 3568 1114 l 3611 1157 l cp
clip
n 3600 1125 m 3825 900 l gs col0 s gr gr

% arrowhead
n 3706 1061 m 3600 1125 l 3664 1019 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
3405 5820 m 3525 5850 l 3405 5880 l 3540 5880 l 3540 5820 l cp
2445 5880 m 2325 5850 l 2445 5820 l 2310 5820 l 2310 5880 l cp
clip
n 2325 5850 m 3525 5850 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 2445 5880 m 2325 5850 l 2445 5820 l  col0 s
% arrowhead
n 3405 5820 m 3525 5850 l 3405 5880 l  col0 s
/Times-Roman ff 300.00 scf sf
3900 900 m
gs 1 -1 sc (X  ,Y) col0 sh gr
/Times-Roman ff 300.00 scf sf
1575 3375 m
gs 1 -1 sc (H) col0 sh gr
/Times-Roman ff 240.00 scf sf
1800 3375 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 300.00 scf sf
2775 6225 m
gs 1 -1 sc (W) col0 sh gr
/Times-Roman ff 240.00 scf sf
3075 6300 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 255.00 scf sf
4125 975 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 240.00 scf sf
4500 975 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 360.00 scf sf
3150 3375 m
gs 1 -1 sc (N) col0 sh gr
% Polyline
n 5850 5100 m 7050 5100 l 7050 3900 l 5850 3900 l cp gs col0 s gr 
% Polyline
n 5850 3000 m 7050 3000 l 7050 1200 l 5850 1200 l cp gs col7 0.80 shd ef gr gs col0 s gr 
% Polyline
n 6300 5400 m 6600 5400 l 6600 900 l 6300 900 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 420.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
 [60 30 15 30] 0 sd
n 5850 5400 m 7050 5400 l 7050 900 l 5850 900 l cp gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
7231 761 m 7125 825 l 7189 719 l 7093 814 l 7136 857 l cp
clip
n 7125 825 m 7350 600 l gs col0 s gr gr

% arrowhead
n 7231 761 m 7125 825 l 7189 719 l  col0 s
% Polyline
 [60 27 15 20 15 27] 0 sd
gs  clippath
7620 1020 m 7650 900 l 7680 1020 l 7680 885 l 7620 885 l cp
7680 5280 m 7650 5400 l 7620 5280 l 7620 5415 l 7680 5415 l cp
clip
n 7650 5400 m 7650 900 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7680 5280 m 7650 5400 l 7620 5280 l  col0 s
% arrowhead
n 7620 1020 m 7650 900 l 7680 1020 l  col0 s
% Polyline
 [60 27 15 20 15 27] 0 sd
gs  clippath
6930 5820 m 7050 5850 l 6930 5880 l 7065 5880 l 7065 5820 l cp
5970 5880 m 5850 5850 l 5970 5820 l 5835 5820 l 5835 5880 l cp
clip
n 5850 5850 m 7050 5850 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 5970 5880 m 5850 5850 l 5970 5820 l  col0 s
% arrowhead
n 6930 5820 m 7050 5850 l 6930 5880 l  col0 s
/Times-Roman ff 300.00 scf sf
7425 600 m
gs 1 -1 sc (X  ,Y) col0 sh gr
/Times-Roman ff 255.00 scf sf
7650 675 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 240.00 scf sf
8025 675 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 300.00 scf sf
6225 6225 m
gs 1 -1 sc (W) col0 sh gr
/Times-Roman ff 300.00 scf sf
7875 3375 m
gs 1 -1 sc (H) col0 sh gr
/Times-Roman ff 255.00 scf sf
8100 3450 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 255.00 scf sf
6525 6300 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 360.00 scf sf
5925 2250 m
gs 1 -1 sc (P) col0 sh gr
/Times-Roman ff 360.00 scf sf
5925 4725 m
gs 1 -1 sc (N) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 3510 5528 20 2396 v 331 5547 3198 20 v 3519
5587 50 2434 v 371 5587 3198 50 v 1910 5673 a Fk(18)p
eop
%%Page: 10 10
10 9 bop 331 -168 3198 20 v 331 2228 20 2396 v 1000 -59
1821 4 v 1000 128 4 188 v 1034 70 a Fn(Mo)t(deling)47
b(of)g(Comp)t(onen)l(ts)i(-)d(2)p 2816 128 V 1000 132
1821 4 v 2818 172 42 196 v 1040 172 1821 42 v 524 408
a Fj(\017)k Fl(Rotation)36 b(of)j(comp)s(onen)m(ts)d(can)j(also)f(b)s
(e)h(form)m(ulated)c(using)634 570 y(this)j(mo)s(del.)524
788 y Fj(\017)50 b Fl(Rotation)36 b(of)j(the)f(L-shap)s(e)i(and)e
(T-shap)s(e)h(comp)s(onen)m(ts)634 951 y(needs)g(further)f(analysis)
1426 2073 y @beginspecial 0 @llx 0 @lly 308 @urx 308
@ury 1008 @rwi @setspecial
%%BeginDocument: rotation.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: rotation.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 06:27:09 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 308 308
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-179.0 406.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7762 m -1000 -1000 l 9112 -1000 l 9112 7762 l cp clip
 0.06000 0.06000 sc
% Arc
15.000 slw
gs  clippath
6849 3830 m 6884 3948 l 6797 3861 l 6890 4016 l 6941 3985 l cp
clip
n 2887.5 6262.5 4618.7 -60.3 -29.7 arc
gs col0 s gr
 gr

% arrowhead
n 6849 3830 m 6884 3948 l 6797 3861 l  col0 s
% Polyline
7.500 slw
n 3000 6150 m 4650 6150 l 4650 2250 l 3000 2250 l cp gs col0 s gr 
% Polyline
n 3600 6750 m 4125 6750 l 4125 1650 l 3600 1650 l cp gs col7 0.65 shd ef gr gs col0 s gr 
% Polyline
 [60] 0 sd
n 3600 6750 m 7500 6750 l 7500 5100 l 3600 5100 l cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3000 6150 m 8100 6150 l 8100 5700 l 3000 5700 l cp gs col7 0.90 shd ef gr gs col0 s gr  [] 0 sd
$F2psEnd
rs

%%EndDocument
 @endspecial 3510 2228 20 2396 v 331 2247 3198 20 v 3519
2287 50 2434 v 371 2287 3198 50 v 1910 2373 a Fk(19)p
331 3132 3198 20 v 331 5528 20 2396 v 996 3241 1830 4
v 996 3428 4 188 v 1029 3370 a Fn(Non-o)l(v)l(erlapping)49
b(Constrain)l(ts)p 2821 3428 V 996 3432 1830 4 v 2823
3472 42 196 v 1035 3472 1830 42 v 524 3912 a Fj(\017)h
Fl(The)39 b(relativ)m(e)d(p)s(osition)h(of)h(comp)s(onen)m(ts)f(are)h
(obtained)634 4076 y(from)e(the)j(initial)d(relativ)m(e)g(placemen)m
(t.)524 4304 y Fj(\017)50 b Fl(Horizon)m(tal)35 b(\()p
Fh(G)1344 4322 y Fg(x)1397 4304 y Fl(\))j(and)h(V)-10
b(ertical)37 b(\()p Fh(G)2283 4322 y Fg(y)2332 4304 y
Fl(\))i(Adjacency)f(Graphs)634 4468 y(are)g(used)h(to)f(determine)f
(the)h(geometric)e(lo)s(cations)g(of)j(the)634 4633 y(comp)s(onen)m
(ts.)471 5050 y Fd(G)549 5065 y Fc(x)599 5050 y Fb(\()p
Fd(V)6 b(;)17 b(E)821 5065 y Fc(x)870 5050 y Fb(\))27
b(:)g Fd(V)50 b Fb(=)28 b Fa(f)p Fd(components)p Fa(g)p
Fd(;)17 b(E)1948 5065 y Fc(x)2026 5050 y Fb(=)28 b Fa(ff)p
Fd(i;)17 b(j)6 b Fa(g)26 b Fb(:)i Fd(i)g Fa(!)f Fd(j)205
b(if)11 b(x)3075 5065 y Fc(i)3136 5050 y Fa(\024)28 b
Fd(x)3298 5065 y Fc(j)3340 5050 y Fa(g)482 5191 y Fd(G)560
5206 y Fc(y)608 5191 y Fb(\()p Fd(V)6 b(;)17 b(E)830
5206 y Fc(y)877 5191 y Fb(\))27 b(:)g Fd(V)50 b Fb(=)28
b Fa(f)p Fd(components)p Fa(g)p Fd(;)17 b(E)1955 5206
y Fc(y)2030 5191 y Fb(=)29 b Fa(ff)p Fd(i;)17 b(j)6 b
Fa(g)26 b Fb(:)h Fd(i)h Fa(!)g Fd(j)205 b(if)11 b(y)3072
5206 y Fc(i)3132 5191 y Fa(\024)28 b Fd(y)3286 5206 y
Fc(j)3328 5191 y Fa(g)p 3510 5528 20 2396 v 331 5547
3198 20 v 3519 5587 50 2434 v 371 5587 3198 50 v 1910
5673 a Fk(20)p eop
%%Page: 11 11
11 10 bop 331 -168 3198 20 v 331 2228 20 2396 v 1444
-59 933 4 v 1444 128 4 188 v 1478 70 a Fn(Example)47
b(1)g(-)g(1)p 2372 128 V 1444 132 933 4 v 2374 172 42
196 v 1484 172 933 42 v 670 2026 a @beginspecial 0 @llx
0 @lly 662 @urx 454 @ury 2519 @rwi @setspecial
%%BeginDocument: ex1_1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ex1_1.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 06:43:02 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 662 454
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-81.0 494.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 9221 m -1000 -1000 l 13370 -1000 l 13370 9221 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Ellipse
n 9750 5175 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 10650 6975 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 8550 6375 450 450 0 360 DrawEllipse gs col0 s gr

/Times-Roman ff 450.00 scf sf
8475 6525 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 450.00 scf sf
9675 5325 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 450.00 scf sf
10575 7125 m
gs 1 -1 sc (3) col0 sh gr
% Ellipse
n 7125 1125 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 8025 2925 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5925 2325 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3750 5100 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4650 6900 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2550 6300 450 450 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
3340 5456 m 3450 5400 l 3379 5502 l 3481 5413 l 3442 5368 l cp
clip
n 2850 5925 m 3450 5400 l gs col0 s gr gr

% arrowhead
n 3340 5456 m 3450 5400 l 3379 5502 l  col0 s
% Polyline
gs  clippath
4094 6686 m 4200 6750 l 4077 6743 l 4205 6783 l 4223 6726 l cp
clip
n 3000 6375 m 4200 6750 l gs col0 s gr gr

% arrowhead
n 4094 6686 m 4200 6750 l 4077 6743 l  col0 s
% Polyline
gs  clippath
4405 6403 m 4425 6525 l 4350 6427 l 4403 6551 l 4458 6527 l cp
clip
n 3975 5475 m 4425 6525 l gs col0 s gr gr

% arrowhead
n 4405 6403 m 4425 6525 l 4350 6427 l  col0 s
% Polyline
gs  clippath
9109 6508 m 9000 6450 l 9124 6450 l 8993 6417 l 8978 6475 l cp
clip
n 10200 6750 m 9000 6450 l gs col0 s gr gr

% arrowhead
n 9109 6508 m 9000 6450 l 9124 6450 l  col0 s
% Polyline
gs  clippath
9269 5464 m 9375 5400 l 9311 5506 l 9407 5411 l 9364 5368 l cp
clip
n 8775 6000 m 9375 5400 l gs col0 s gr gr

% arrowhead
n 9269 5464 m 9375 5400 l 9311 5506 l  col0 s
% Polyline
gs  clippath
10073 5672 m 10050 5550 l 10128 5646 l 10071 5524 l 10016 5549 l cp
clip
n 10500 6525 m 10050 5550 l gs col0 s gr gr

% arrowhead
n 10073 5672 m 10050 5550 l 10128 5646 l  col0 s
/Times-Roman ff 450.00 scf sf
5850 2475 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 450.00 scf sf
7050 1275 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 450.00 scf sf
7950 3075 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 450.00 scf sf
4800 3825 m
gs 1 -1 sc (Initial Relative Placement) col0 sh gr
/Times-Roman ff 450.00 scf sf
1350 8100 m
gs 1 -1 sc (Horizontal Adjacency Graph) col0 sh gr
/Times-Roman ff 450.00 scf sf
7725 8100 m
gs 1 -1 sc (Vertical Adjacency Graph) col0 sh gr
/Times-Roman ff 450.00 scf sf
2475 6450 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 450.00 scf sf
3675 5250 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 450.00 scf sf
4575 7050 m
gs 1 -1 sc (3) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 3510 2228 20 2396 v 331 2247 3198 20 v 3519
2287 50 2434 v 371 2287 3198 50 v 1910 2373 a Fk(21)p
331 3132 3198 20 v 331 5528 20 2396 v 1444 3241 933 4
v 1444 3428 4 188 v 1478 3370 a Fn(Example)g(1)g(-)g(2)p
2372 3428 V 1444 3432 933 4 v 2374 3472 42 196 v 1484
3472 933 42 v 524 3747 a Fj(\017)j Fl(If)39 b(comp)s(onen)m(ts)e(are)h
(forced)g(to)g(satisfy)f(b)s(oth)h(adjacency)634 3912
y(relations,)e(the)j(constrain)m(t)d(set)i(is)h(con)m(v)m(ex.)524
4139 y Fj(\017)50 b Fl(LP)39 b(can)f(b)s(e)i(used)1321
5081 y @beginspecial 0 @llx 0 @lly 479 @urx 340 @ury
1217 @rwi @setspecial
%%BeginDocument: ex1_2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ex1_2.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 06:49:42 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 479 340
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-161.0 424.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 8062 m -1000 -1000 l 11662 -1000 l 11662 8062 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 3450 6600 m 6300 6600 l 6300 4950 l 3450 4950 l cp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
10530 4770 m 10650 4800 l 10530 4830 l 10665 4830 l 10665 4770 l cp
clip
n 2700 4800 m 10650 4800 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 10530 4770 m 10650 4800 l 10530 4830 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
6420 1920 m 6450 1800 l 6480 1920 l 6480 1785 l 6420 1785 l cp
clip
n 6450 7050 m 6450 1800 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 6420 1920 m 6450 1800 l 6480 1920 l  col0 s
% Polyline
 [60] 0 sd
n 6525 4725 m 10425 4725 l 10425 1425 l 6525 1425 l cp gs col7 0.75 shd ef gr gs col7 s gr  [] 0 sd
/Times-Roman ff 450.00 scf sf
4725 5925 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 450.00 scf sf
8250 3375 m
gs 1 -1 sc (j) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 524 5368 a Fj(\017)50 b Fl(Solution)37 b(will)g(b)s(e)i(o)
m(v)m(er-constrained.)p 3510 5528 20 2396 v 331 5547
3198 20 v 3519 5587 50 2434 v 371 5587 3198 50 v 1910
5673 a Fk(22)p eop
%%Page: 12 12
12 11 bop 331 -168 3198 20 v 331 2228 20 2396 v 1444
-59 933 4 v 1444 128 4 188 v 1478 70 a Fn(Example)47
b(1)g(-)g(3)p 2372 128 V 1444 132 933 4 v 2374 172 42
196 v 1484 172 933 42 v 524 396 a Fj(\017)j Fl(One)39
b(relation)d(needs)k(to)e(b)s(e)h(satis\014ed.)524 604
y Fj(\017)50 b Fl(The)39 b(solution)e(of)h(resides)g(in)h(the)g
(non-con)m(v)m(ex)e(area)1343 1687 y @beginspecial 0
@llx 0 @lly 542 @urx 465 @ury 1174 @rwi @setspecial
%%BeginDocument: ex1_3.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ex1_3.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 06:59:27 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 542 465
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-194.0 508.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 9463 m -1000 -1000 l 13253 -1000 l 13253 9463 l cp clip
 0.06000 0.06000 sc
/Times-Roman ff 270.00 scf sf
11550 4275 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 270.00 scf sf
12000 4275 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 270.00 scf sf
7500 1200 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 270.00 scf sf
7950 1200 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 270.00 scf sf
8025 4425 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 270.00 scf sf
8475 4425 m
gs 1 -1 sc (j) col0 sh gr
7.500 slw
 [60] 0 sd
% Ellipse
n 6300 1500 75 75 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 7350 5100 75 75 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 10650 4800 75 75 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr
 [] 0 sd
% Polyline
n 4800 3600 m 6300 3600 l 6300 1500 l 4800 1500 l cp gs col0 s gr 
% Polyline
n 4050 6600 m 7350 6600 l 7350 5100 l 4050 5100 l cp gs col0 s gr 
% Polyline
n 9150 6900 m 10650 6900 l 10650 4800 l 9150 4800 l cp gs col0 s gr 
% Polyline
gs  clippath
5520 3795 m 5550 3675 l 5580 3795 l 5580 3660 l 5520 3660 l cp
clip
n 5550 5025 m 5550 3675 l gs col0 s gr gr

% arrowhead
n 5520 3795 m 5550 3675 l 5580 3795 l  col0 s
% Polyline
gs  clippath
8955 5820 m 9075 5850 l 8955 5880 l 9090 5880 l 9090 5820 l cp
clip
n 7425 5850 m 9075 5850 l gs col0 s gr gr

% arrowhead
n 8955 5820 m 9075 5850 l 8955 5880 l  col0 s
/Times-Roman ff 375.00 scf sf
5550 2625 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 375.00 scf sf
5550 6000 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 375.00 scf sf
7650 5475 m
gs 1 -1 sc (Q    = 1) col0 sh gr
/Times-Roman ff 375.00 scf sf
9900 6000 m
gs 1 -1 sc (j) col0 sh gr
/Times-Roman ff 360.00 scf sf
4275 4425 m
gs 1 -1 sc (Q    = 0) col0 sh gr
/Times-Roman ff 270.00 scf sf
4575 4575 m
gs 1 -1 sc (ij) col0 sh gr
/Times-Roman ff 270.00 scf sf
7950 5625 m
gs 1 -1 sc (ij) col0 sh gr
/Times-Roman ff 375.00 scf sf
11100 4125 m
gs 1 -1 sc (\(X  ,Y \)) col0 sh gr
/Times-Roman ff 375.00 scf sf
7050 1050 m
gs 1 -1 sc (\(X  ,Y \)) col0 sh gr
/Times-Roman ff 375.00 scf sf
7575 4275 m
gs 1 -1 sc (\(X  ,Y \)) col0 sh gr
% Polyline
285.000 slw
gs  clippath
7329 2250 m 7628 2550 l 7329 2850 l 7950 2850 l 7950 2250 l cp
clip
n 6600 2550 m 7650 2550 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 440.00 170.00]  PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
30.000 slw
n 7329 2250 m 7628 2550 l 7329 2850 l  col0 s
% Polyline
285.000 slw
gs  clippath
9600 3771 m 9900 3471 l 10200 3771 l 10200 3150 l 9600 3150 l cp
clip
n 9900 4500 m 9900 3450 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 660.00 230.00]  PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
30.000 slw
n 9600 3771 m 9900 3471 l 10200 3771 l  col0 s
% Polyline
285.000 slw
gs  clippath
10200 7929 m 9900 8228 l 9600 7929 l 9600 8550 l 10200 8550 l cp
clip
n 9900 7200 m 9900 8250 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 660.00 480.00]  PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
30.000 slw
n 10200 7929 m 9900 8228 l 9600 7929 l  col0 s
% Polyline
7.500 slw
gs  clippath
7531 4961 m 7425 5025 l 7489 4919 l 7393 5014 l 7436 5057 l cp
clip
n 7425 5025 m 7950 4500 l gs col0 s gr gr

% arrowhead
n 7531 4961 m 7425 5025 l 7489 4919 l  col0 s
% Polyline
285.000 slw
gs  clippath
3771 2850 m 3471 2550 l 3771 2250 l 3150 2250 l 3150 2850 l cp
clip
n 4500 2550 m 3450 2550 l gs 0.40 setgray ef gr gs col0 s gr gr

% arrowhead
30.000 slw
n 3771 2850 m 3471 2550 l 3771 2250 l  col0 s
% Polyline
7.500 slw
gs  clippath
6416 1390 m 6294 1411 l 6391 1335 l 6268 1390 l 6292 1445 l cp
clip
n 6294 1411 m 6969 1111 l gs col0 s gr gr

% arrowhead
n 6416 1390 m 6294 1411 l 6391 1335 l  col0 s
% Polyline
gs  clippath
10766 4758 m 10650 4800 l 10733 4708 l 10621 4783 l 10654 4833 l cp
clip
n 10650 4800 m 11325 4350 l gs col0 s gr gr

% arrowhead
n 10766 4758 m 10650 4800 l 10733 4708 l  col0 s
$F2psEnd
rs
end

%%EndDocument
 @endspecial 524 1943 a Fj(\017)50 b Fl(ILP)39 b(is)g(can)f(not)g(b)s
(e)i(applied.)50 b(In)m(teger)38 b(v)-7 b(ariables,)36
b Fh(Q)3030 1961 y Fg(ij)3142 1943 y Fl(are)634 2103
y(in)m(tro)s(duced.)p 3510 2228 20 2396 v 331 2247 3198
20 v 3519 2287 50 2434 v 371 2287 3198 50 v 1910 2373
a Fk(23)p 331 3132 3198 20 v 331 5528 20 2396 v 890 3241
2040 4 v 890 3428 4 188 v 924 3370 a Fn(Non-o)l(v)l(erlapping)49
b(Constrain)l(ts)e(-)g(2)p 2926 3428 V 890 3432 2040
4 v 2928 3472 42 196 v 930 3472 2040 42 v 524 3695 a
Fj(\017)j Fl(MILP)39 b(non-o)m(v)m(erlapping)d(constrain)m(ts)g(can)i
(b)s(e)i(written)d(as)634 3855 y(follo)m(ws)667 5403
y @beginspecial 0 @llx 0 @lly 182 @urx 405 @ury 582 @rwi
@setspecial
%%BeginDocument: nonovcons.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: nonovcons.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 07:24:40 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 182 405
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-278.0 454.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 8558 m -1000 -1000 l 8658 -1000 l 8658 8558 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Ellipse
n 6300 1275 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 7200 3075 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5100 2475 450 450 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
5890 1631 m 6000 1575 l 5929 1677 l 6031 1588 l 5992 1543 l cp
clip
n 5400 2100 m 6000 1575 l gs col0 s gr gr

% arrowhead
n 5890 1631 m 6000 1575 l 5929 1677 l  col0 s
% Polyline
gs  clippath
6644 2861 m 6750 2925 l 6627 2918 l 6755 2958 l 6773 2901 l cp
clip
n 5550 2550 m 6750 2925 l gs col0 s gr gr

% arrowhead
n 6644 2861 m 6750 2925 l 6627 2918 l  col0 s
% Polyline
gs  clippath
6955 2578 m 6975 2700 l 6900 2602 l 6953 2726 l 7008 2702 l cp
clip
n 6525 1650 m 6975 2700 l gs col0 s gr gr

% arrowhead
n 6955 2578 m 6975 2700 l 6900 2602 l  col0 s
/Times-Roman ff 450.00 scf sf
6225 1425 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 450.00 scf sf
7125 3225 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 450.00 scf sf
5025 2625 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 450.00 scf sf
5850 3600 m
gs 1 -1 sc (G) col0 sh gr
/Times-Roman ff 270.00 scf sf
6150 3675 m
gs 1 -1 sc (x) col0 sh gr
% Ellipse
n 6300 5100 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 7200 6900 450 450 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5100 6300 450 450 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
5890 5456 m 6000 5400 l 5929 5502 l 6031 5413 l 5992 5368 l cp
clip
n 5400 5925 m 6000 5400 l gs col0 s gr gr

% arrowhead
n 5890 5456 m 6000 5400 l 5929 5502 l  col0 s
% Polyline
gs  clippath
5656 6439 m 5550 6375 l 5673 6382 l 5545 6342 l 5527 6399 l cp
clip
n 5550 6375 m 6750 6750 l gs col0 s gr gr

% arrowhead
n 5656 6439 m 5550 6375 l 5673 6382 l  col0 s
% Polyline
gs  clippath
6545 5597 m 6525 5475 l 6600 5573 l 6547 5449 l 6492 5473 l cp
clip
n 6525 5475 m 6975 6525 l gs col0 s gr gr

% arrowhead
n 6545 5597 m 6525 5475 l 6600 5573 l  col0 s
/Times-Roman ff 450.00 scf sf
6225 5250 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 450.00 scf sf
7125 7050 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 450.00 scf sf
5025 6450 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 450.00 scf sf
5850 7425 m
gs 1 -1 sc (G) col0 sh gr
/Times-Roman ff 270.00 scf sf
6150 7500 m
gs 1 -1 sc (y) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 1502 4280 a Fh(x)1569 4298 y Fe(2)1642 4280
y Fj(\000)27 b Fh(x)1829 4298 y Fe(1)1909 4280 y Fj(\025)33
b Fh(W)2146 4298 y Fe(2)2219 4280 y Fj(\000)27 b Fh(L)f
Fj(\003)g Fl(\(1)g Fj(\000)h Fh(Q)2875 4298 y Fe(12)2964
4280 y Fl(\))1502 4445 y Fh(y)1559 4463 y Fe(2)1633 4445
y Fj(\000)f Fh(y)1809 4463 y Fe(1)1890 4445 y Fj(\025)33
b Fh(H)2113 4463 y Fe(2)2187 4445 y Fj(\000)26 b Fh(L)h
Fj(\003)f Fh(Q)2592 4463 y Fe(12)1502 4610 y Fh(x)1569
4628 y Fe(3)1642 4610 y Fj(\000)h Fh(x)1829 4628 y Fe(1)1909
4610 y Fj(\025)33 b Fh(W)2146 4628 y Fe(1)2219 4610 y
Fj(\000)27 b Fh(L)f Fj(\003)g Fl(\(1)g Fj(\000)h Fh(Q)2875
4628 y Fe(13)2964 4610 y Fl(\))2349 4787 y(.)2349 4952
y(.)2349 5116 y(.)p 3510 5528 20 2396 v 331 5547 3198
20 v 3519 5587 50 2434 v 371 5587 3198 50 v 1910 5673
a Fk(24)p eop
%%Page: 13 13
13 12 bop 331 -168 3198 20 v 331 2228 20 2396 v 1198
-59 1426 4 v 1198 128 4 188 v 1231 70 a Fn(Boundary)48
b(Constrain)l(ts)p 2619 128 V 1198 132 1426 4 v 2621
172 42 196 v 1237 172 1426 42 v 524 575 a Fj(\017)i Fl(Eac)m(h)38
b(comp)s(onen)m(t)e(m)m(ust)h(b)s(e)j(placed)e(within)f(the)634
739 y(b)s(oundaries)h(of)g(the)h(macrob)s(o)m(x.)737
1909 y @beginspecial 0 @llx 0 @lly 358 @urx 236 @ury
1092 @rwi @setspecial
%%BeginDocument: boundary.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: boundary.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Oct  5 07:43:21 1999
%%For: saskar@sonata.ecs.umass.edu ()
%%Orientation: Portrait
%%BoundingBox: 0 0 358 236
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-197.0 433.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 8212 m -1000 -1000 l 10237 -1000 l 10237 8212 l cp clip
 0.06000 0.06000 sc
7.500 slw
 [15 45] 45 sd
1 slc
% Ellipse
n 6300 5250 75 75 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr
 [] 0 sd
% Polyline
0 slc
n 3300 7200 m 9225 7200 l 9225 3300 l 3300 3300 l cp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
8670 3495 m 8700 3375 l 8730 3495 l 8730 3360 l 8670 3360 l cp
8730 7005 m 8700 7125 l 8670 7005 l 8670 7140 l 8730 7140 l cp
clip
n 8700 7125 m 8700 3375 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 8730 7005 m 8700 7125 l 8670 7005 l  col0 s
% arrowhead
n 8670 3495 m 8700 3375 l 8730 3495 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
9030 3570 m 9150 3600 l 9030 3630 l 9165 3630 l 9165 3570 l cp
3495 3630 m 3375 3600 l 3495 3570 l 3360 3570 l 3360 3630 l cp
clip
n 3375 3600 m 9150 3600 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 3495 3630 m 3375 3600 l 3495 3570 l  col0 s
% arrowhead
n 9030 3570 m 9150 3600 l 9030 3630 l  col0 s
% Polyline
n 4350 6300 m 6300 6300 l 6300 5250 l 4350 5250 l cp gs col0 s gr 
% Polyline
 [15 45] 45 sd
gs  clippath
9030 5820 m 9150 5850 l 9030 5880 l 9165 5880 l 9165 5820 l cp
clip
n 6450 5850 m 9150 5850 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 9030 5820 m 9150 5850 l 9030 5880 l  col0 s
% Polyline
 [15 45] 45 sd
gs  clippath
3495 5880 m 3375 5850 l 3495 5820 l 3360 5820 l 3360 5880 l cp
clip
n 4275 5850 m 3375 5850 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 3495 5880 m 3375 5850 l 3495 5820 l  col0 s
% Polyline
 [15 45] 45 sd
gs  clippath
5280 7005 m 5250 7125 l 5220 7005 l 5220 7140 l 5280 7140 l cp
clip
n 5250 6375 m 5250 7125 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 5280 7005 m 5250 7125 l 5220 7005 l  col0 s
% Polyline
 [15 45] 45 sd
gs  clippath
5220 3495 m 5250 3375 l 5280 3495 l 5280 3360 l 5220 3360 l cp
clip
n 5250 5175 m 5250 3375 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 5220 3495 m 5250 3375 l 5280 3495 l  col0 s
/Times-Roman ff 450.00 scf sf
8775 5100 m
gs 1 -1 sc (Y) col0 sh gr
/Times-Roman ff 270.00 scf sf
9000 5250 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
6150 4125 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 450.00 scf sf
5850 3975 m
gs 1 -1 sc (X) col0 sh gr
/Times-Roman ff 450.00 scf sf
5250 5925 m
gs 1 -1 sc (i) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 2150 1283 a Fh(x)2217 1301 y Fg(i)2283 1283
y Fj(\025)33 b Fh(W)2520 1301 y Fg(i)2150 1448 y Fh(x)2217
1466 y Fg(i)2283 1448 y Fj(\024)g Fh(X)2506 1466 y Fe(0)2150
1612 y Fh(y)2207 1630 y Fg(i)2274 1612 y Fj(\025)g Fh(H)2497
1630 y Fg(i)2150 1777 y Fh(y)2207 1795 y Fg(i)2274 1777
y Fj(\024)g Fh(Y)2468 1795 y Fe(0)p 3510 2228 20 2396
v 331 2247 3198 20 v 3519 2287 50 2434 v 371 2287 3198
50 v 1910 2373 a Fk(25)p 331 3132 3198 20 v 331 5528
20 2396 v 1298 3241 1225 4 v 1298 3400 4 160 v 1332 3370
a Fn(MILP)45 b(F)-12 b(orm)l(ulation)p 2518 3400 V 1298
3404 1225 4 v 2520 3444 42 168 v 1338 3444 1225 42 v
524 4254 a Fj(\017)50 b Fl(Minimize)36 b Fh(Y)1212 4272
y Fe(0)634 4419 y Fl(s.t.)656 4614 y Fi({)50 b Fl(Boundary)38
b(constrain)m(ts)656 4810 y Fi({)50 b Fl(Non-o)m(v)m(erlapping)35
b(constrain)m(ts)p 3510 5528 20 2396 v 331 5547 3198
20 v 3519 5587 50 2434 v 371 5587 3198 50 v 1910 5673
a Fk(26)p eop
%%Page: 14 14
14 13 bop 331 -168 3198 20 v 331 2228 20 2396 v 1402
-59 1017 4 v 1402 126 4 186 v 1436 68 a Fn(P)l(ost-pro)t(cessing)p
2414 126 V 1402 130 1017 4 v 2416 170 42 194 v 1442 170
1017 42 v 524 822 a Fj(\017)50 b Fl(Finding)38 b(\014nal)g(comp)s(onen)
m(t)f(orien)m(tation)656 1018 y Fi({)50 b Fl(T)-10 b(o)39
b(simplify)d(routabilit)m(y)656 1214 y Fi({)50 b Fl(T)-10
b(o)39 b(minimize)c(P/N)j(islands)524 1441 y Fj(\017)50
b Fl(Iterativ)m(e)36 b(impro)m(v)m(emen)m(t)524 1668
y Fj(\017)50 b Fl(Compaction)p 3510 2228 20 2396 v 331
2247 3198 20 v 3519 2287 50 2434 v 371 2287 3198 50 v
1910 2373 a Fk(27)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
